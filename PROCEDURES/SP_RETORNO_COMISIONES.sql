CREATE OR REPLACE PROCEDURE "EXT"."SP_RETORNO_COMISIONES" (OUT FILENAME VARCHAR(120), IN pPlRunSeq BIGINT) LANGUAGE SQLSCRIPT SQL SECURITY DEFINER DEFAULT SCHEMA "EXT" AS

BEGIN

    DECLARE i_Tenant VARCHAR2(127);
	DECLARE vProcedure VARCHAR2(127);
	DECLARE io_contador  Number := 0;
	DECLARE filasInsertadasPre Number := 0;
	DECLARE filasInsertadasGroup Number := 0;
	DECLARE periodoName VARCHAR2(255);
	DECLARE linea1 VARCHAR(900) := '';
	DECLARE siguienteCampo VARCHAR(250) := '';
	DECLARE vPeriodSeq BIGINT;
	DECLARE vPeriodStartdate TIMESTAMP;
	DECLARE contador INT := 0;
	DECLARE commit_interval INT := 1000;
	DECLARE vDecimal18Defecto VARCHAR(18) := '000000000000000000';
	DECLARE v_table_exists  Number := 0;
	DECLARE cVersion CONSTANT VARCHAR(2) := '12';

-- VERSIONES
--v01 - Se cambia el codigo que se ponia a mano para comparar el TX.EVENTTYPESEQ por una consulta para que funcione en todos los entornos
--v02 - Se modifica el PERIODSEQ que se insertaba porque se utilizaba directamente pPlRunSeq
--v03 - Ante la lentitud del proceso dinamico utilizando la tabla de interfaces, se sustituye por una generación estatica de la linea
--v04 - Se han añadido valores específicos en la linea1 cuando el mediador es canal directo. También se pone a 0 la fecha de emisión para caución.
--v05 - Se han eliminado los separadores.
--v06 - Se sustituye Cursor comisionGroup por consulta directa por problemas de rendimiento y se corrige algun error
--v07 - Modificación del foramto del porcentaje de comisión - cg.POR_COMISIONAPL, Incorporación de los créditos USD en Dolares 
--v08 - Tabla EXT_RETORNO_COMISIONES_GROUP_TXT previa a generar el formato de salida concatenado en una linea
--v09 - Función para garantizar que hay Mediador aun cuando el Mediador activo CIC sea 0 y no haya valores a 1
--v10 - Cambios tras revision con CESCE: 
--          1. Todos los mediadores se incluyen en el fichero, no hay que agrupar por el (hasta ahora) Mediador Principal CIC. La prima solo se informa para el mediador Principal
--          2. El Mediador Principal CIC se determina en función del porcentaje de comision, tipo y numero de mediador, se crea una tabla temporal para determinar el mediador principal
--          3. Los campos de PRIMA solo se informan para el Mediador Principal CIC para el resto bajan a 0 y solo se informan las comisiones.
--v11 - Revisión de incidencias: Falta REMOVEDATE de UNITTYPE y Las primas se multiplican por el % participación del mediador (TA.GN1)
--v12 - se llama a la función de conversion para el porcentaje de comisión, ya que se envia alguno negativo en las regularizaciones y se filtran los registros con Num REcibo real = 0


	--Cursor para recorrer los campos asociados a este procedimiento de salida de la tabla de formato interfaces
/*Se deshabilita el cursos de interfaces por Lentitud 	
    DECLARE CURSOR interfaz FOR SELECT *
    FROM "EXT"."FORMATO_INTERFACES"
    WHERE COD_INTERFACE = 'COMCI'
	ORDER BY ORDENLINEA, ORDENCAMPO ASC;
*/
	--Cursor para recorrer todos los registros de la tabla group que esten pendientes de envio al fichero de salida
	DECLARE CURSOR comisionGroup FOR SELECT *
	FROM EXT.EXT_RETORNO_COMISIONES_GROUP
	WHERE PERIODSEQ = (SELECT PERIODSEQ FROM TCMP.CS_PLRUN WHERE PIPELINERUNSEQ = pPlRunSeq)
	ORDER BY POL_ANUALIDAD, COD_GARANTIA, CUE_RIESGO, CANAL_DISTRIB, MES_EMISION_PRIMA, NUM_RECIBO, NUM_MOVTO, TPO_MOVTO, MEDIADOR DESC;
	
----------------------------- HANDLER EXCEPTION -------------------------

DECLARE EXIT HANDLER FOR SQLEXCEPTION

	BEGIN
		CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'SQL_ERROR_MESSAGE: ' || 
					  IFNULL(::SQL_ERROR_MESSAGE,'') || 
					  '. SQL_ERROR_CODE: '||::SQL_ERROR_CODE, vProcedure , io_contador);
		RESIGNAL;
	END;
	
	vProcedure := 'SP_RETORNO_COMISIONES';

----Comienza a escribir en DEBUG

	SELECT TENANTID INTO i_Tenant FROM TCMP.CS_TENANT;

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INICIO PROCEDIMIENTO with SESSION_USER '|| SESSION_USER || ' version ' || cVersion, vProcedure, io_contador);
	
	--Obtenemos el nombre del periodo del pipeline ejecutado
	
	SELECT NAME, PERIODSEQ, STARTDATE INTO periodoName, vPeriodSeq,vPeriodStartdate FROM TCMP.CS_PERIOD 
	WHERE PERIODSEQ = (SELECT PERIODSEQ FROM TCMP.CS_PLRUN WHERE PIPELINERUNSEQ = pPlRunSeq)
	AND REMOVEDATE = TO_DATE('22000101','yyyymmdd');
	
	--Una vez tenemos el periodo comenzamos a insertar en las tablas
	
	CALL LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INSERT EN TABLA EXT.EXT_RETORNO_COMISIONES_PRE' || periodoName, vProcedure ,io_contador);
	
	DELETE FROM EXT.EXT_RETORNO_COMISIONES_OUT;
	DELETE FROM EXT.EXT_RETORNO_COMISIONES_GROUP_TXT;
	DELETE FROM EXT.MEDIADOR_PRINCIPAL_TMP;

	--Inserción de los creditos en la tabla pre
	
	DELETE FROM EXT.EXT_RETORNO_COMISIONES_PRE;
	
	INSERT INTO EXT.EXT_RETORNO_COMISIONES_PRE (
		IND_REGISTRO, MES, POL_ANUALIDAD, COD_GARANTIA, CUE_RIESGO, CANAL_DISTRIB, MEDIADOR, DELEG_MEDIADOR, MES_EMISION_PRIMA, IMP_PEMITIDA, IMP_PCOBRADA, IMP_PDEVENGADA, IMP_PENOCOB_INI,
		IMP_PENOCOB_FIN, IMP_PENOADQ_INI, IMP_PENOADQ_FIN, IMP_PDEVNOE_INI, IMP_PDEVNOE_FIN, IMP_PEMIINTER, IMP_COMISPEMI, IMP_PCOBINTER, IMP_COMISPCOB, IMP_PDEVPTEMINT_FIN, IMP_COMPDEVPTEMINT_FIN,
		POR_COMISIONAPL, COD_MONEDA_GES, FEC_MOVIMIEN, NUM_RECIBO, NUM_MOVTO, TPO_MOVTO, COD_SUBMEDIADOR, TPO_COMISION, IMP_PEMITIDA_DIV, IMP_PCOBRADA_DIV, IMP_PEMIINTER_DIV, IMP_COMISPEMI_DIV,
		IMP_PCOBINTER_DIV, IMP_COMISPCOB_DIV, IMP_PDEVENGADA_DIV, IMP_PENOADQ_INI_DIV, IMP_PENOADQ_FIN_DIV, IMP_PDEVNOE_INI_DIV, IMP_PDEVNOE_FIN_DIV, IMP_PDEVPTEMINT_FIN_DIV,
		IMP_COMPDEVPTEMINT_FIN_DIV, COD_MONEDA_DIV, PERIODSEQ, PERIODNAME, ACTIVO_CIC
	)
		SELECT 'HECHO02' AS IND_REGISTRO, 
			TO_NVARCHAR(TO_DATE(TX.COMPENSATIONDATE),  'YYYYMM') AS MES, 
			CONCAT(SUBSTRING(SO.ORDERID, 0, 11), TO_NVARCHAR(TO_DATE(TX.GENERICDATE5),  'YYYYMMDD')) AS ANUALIDAD, 
			TX.GENERICATTRIBUTE6 AS COD_GARANTIA, 
			TX.GENERICATTRIBUTE7 AS CUE_RIESGO, 
			MED.CANAL_DIST_CIC AS CANAL_DISTRIB, 
			MED.COD_MEDIADOR AS MEDIADOR,
			TO_INTEGER(MED.ID_DIR_TERRITORIAL) AS DELEG_MEDIDOR,
			TO_NVARCHAR(TO_DATE(TX.GENERICDATE1),  'YYYYMM') AS MES_EMISION_PRIMA,
			0 AS IMP_PEMITIDA,
			0 AS IMP_PCOBRADA,
			0 AS IMP_PDEVENGADA,
			0 AS IMP_PENOCOB_INI,
			0 AS IMP_PENOCOB_FIN,
			0 AS IMP_PENOADQ_INI,
			0 AS IMP_PENOADQ_FIN,
			0 AS IMP_PDEVNOE_INI,
			0 AS IMP_PDEVNOE_FIN,
			CASE WHEN (TX.GENERICATTRIBUTE3 = 'E')  THEN ROUND(TX.VALUE * IFNULL(TA.GENERICNUMBER1,1) , 2) 
				 WHEN (TX.GENERICATTRIBUTE3 = 'AE') THEN ROUND(TX.VALUE * IFNULL(TA.GENERICNUMBER1,1) * (-1), 2) 
				 ELSE 0 END AS IMP_PEMIINTER,
			CASE WHEN (TX.GENERICATTRIBUTE3 = 'E') THEN CR.VALUE WHEN (TX.GENERICATTRIBUTE3 = 'AE') THEN CR.VALUE * (-1) ELSE 0 END AS IMP_COMISPEMI,
			CASE WHEN (TX.GENERICATTRIBUTE3 = 'C')  THEN ROUND(TX.VALUE * IFNULL(TA.GENERICNUMBER1,1), 2) 
				 WHEN (TX.GENERICATTRIBUTE3 = 'AC') THEN ROUND(TX.VALUE * IFNULL(TA.GENERICNUMBER1,1) * (-1), 2) 
				 ELSE 0 END AS IMP_PCOBINTER,
			CASE WHEN (TX.GENERICATTRIBUTE3 = 'C') THEN CR.VALUE WHEN (TX.GENERICATTRIBUTE3 = 'AC') THEN CR.VALUE * (-1) ELSE 0 END AS IMP_COMISPCOB,
			0 AS IMP_PDEVPTEMINT_FIN,
			0 AS IMP_COMPDEVPTEMINT_FIN,
			CR.GENERICNUMBER1 AS POR_COMISIONAPL,
			TX.GENERICATTRIBUTE16 AS COD_MONEDA_GES,
			TO_NVARCHAR(TO_DATE(TX.GENERICDATE4),  'YYYYMMDD') AS FEC_MOVIMIEN, 
			TX.GENERICATTRIBUTE2 AS NUM_RECIBO, 
			TX.GENERICATTRIBUTE8 AS NUM_MOVTO,
			CASE WHEN (TX.GENERICATTRIBUTE9 like '%Recibo%') then TX.GENERICATTRIBUTE8 else TX.GENERICATTRIBUTE9 END AS TPO_MOVTO, 
			MED.SUBCLAVE AS COD_SUBMEDIADOR,
			CASE WHEN (TX.EVENTTYPESEQ = ( select DATATYPESEQ from CS_EVENTTYPE where EVENTTYPEID='Emision' and REMOVEDATE ='2200-01-01')) THEN 001 
			WHEN (TX.EVENTTYPESEQ = ( select DATATYPESEQ from CS_EVENTTYPE where EVENTTYPEID='Renovacion' and REMOVEDATE ='2200-01-01' )) THEN 002 
			ELSE 0 
			END AS TPO_COMISION,
			0 AS IMP_PEMITIDA_DIV,
			0 AS IMP_PCOBRADA_DIV,
			CASE WHEN (TX.GENERICATTRIBUTE3 = 'E')  THEN ROUND(TX.VALUE * IFNULL(TA.GENERICNUMBER1,1) * TX.GENERICATTRIBUTE19 , 2) 
				 WHEN (TX.GENERICATTRIBUTE3 = 'AE') THEN ROUND(TX.VALUE * IFNULL(TA.GENERICNUMBER1,1) * TX.GENERICATTRIBUTE19 * (-1), 2) 
				 ELSE 0 END AS IMP_PEMIINTER_DIV,
			CASE WHEN (TX.GENERICATTRIBUTE3 = 'E') THEN CR.VALUE * TX.GENERICATTRIBUTE19 WHEN (TX.GENERICATTRIBUTE3 = 'AE') THEN CR.VALUE * TX.GENERICATTRIBUTE19 * (-1) ELSE 0 END AS IMP_COMISPEMI_DIV,
			CASE WHEN (TX.GENERICATTRIBUTE3 = 'C')  THEN ROUND(TX.VALUE * IFNULL(TA.GENERICNUMBER1,1) * TX.GENERICATTRIBUTE19 , 2) 
				 WHEN (TX.GENERICATTRIBUTE3 = 'AC') THEN ROUND(TX.VALUE * IFNULL(TA.GENERICNUMBER1,1) * TX.GENERICATTRIBUTE19 * (-1), 2) 
				 ELSE 0 END AS IMP_PCOBINTER_DIV,
			CASE WHEN (TX.GENERICATTRIBUTE3 = 'C') THEN CR.VALUE * TX.GENERICATTRIBUTE19 WHEN (TX.GENERICATTRIBUTE3 = 'AC') THEN CR.VALUE * TX.GENERICATTRIBUTE19 * (-1) ELSE 0 END AS IMP_COMISPCOB_DIV,
			0 AS IMP_PDEVENGADA_DIV,
			0 AS IMP_PENOADQ_INI_DIV,
			0 AS IMP_PENOADQ_FIN_DIV,
			0 AS IMP_PDEVNOE_INI_DIV,
			0 AS IMP_PDEVNOE_FIN_DIV,
			0 AS IMP_PDEVPTEMINT_FIN_DIV,
			0 AS IMP_COMPDEVPTEMINT_FIN_DIV,
			TX.GENERICATTRIBUTE16 AS COD_MONEDA_DIV,
			--pPlRunSeq AS PERIODSEQ,
			vPeriodSeq AS PERIODSEQ,
			periodoName AS PERIODNAME,
			IFNULL (TA.GENERICBOOLEAN1,1) AS ACTIVO_CIC
		FROM CS_CREDIT CR
			INNER JOIN CS_PERIOD PER ON PER.PERIODSEQ = CR.PERIODSEQ AND PER.REMOVEDATE = TO_DATE('22000101','yyyymmdd')
			LEFT JOIN CS_SALESTRANSACTION TX ON CR.SALESTRANSACTIONSEQ = TX.SALESTRANSACTIONSEQ
			LEFT JOIN CS_SALESORDER SO ON CR.SALESORDERSEQ = SO.SALESORDERSEQ AND SO.REMOVEDATE = TO_DATE('22000101', 'yyyymmdd')
			LEFT JOIN CS_UNITTYPE UT1 ON CR.UNITTYPEFORVALUE = UT1.UNITTYPESEQ AND UT1.REMOVEDATE = TO_DATE('22000101', 'yyyymmdd')
			LEFT JOIN EXT.MODIFICAR_MEDIADOR MED ON CR.POSITIONSEQ = MED.POSITIONSEQ
			LEFT JOIN CS_TRANSACTIONASSIGNMENT TA ON CR.SALESTRANSACTIONSEQ = TA.SALESTRANSACTIONSEQ AND TA.POSITIONNAME = MED.POSITIONNAME
		WHERE PER.NAME LIKE periodoName
		AND PER.REMOVEDATE = TO_DATE('22000101','yyyymmdd')
		AND cr.NAME IN ('CD_SP_Comision_Emision', 'CD_SP_Comision_Renovacion','CD_PT_Comision_Emision', 'CD_PT_Comision_Renovacion','CD_SP_Comision_Emision_USD', 'CD_SP_Comision_Renovacion_USD')
		AND TX.GENERICATTRIBUTE2 is not null;  --v12 se filtran los movimientos sin numero de recibo real aunque no deberian existir

	SELECT COUNT(*) INTO filasInsertadasPre FROM EXT.EXT_RETORNO_COMISIONES_PRE WHERE PERIODSEQ = vPeriodSeq;
	
	CALL LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'SE HAN INSERTADO '|| filasInsertadasPre ||' FILAS EN LA TABLA: EXT.EXT_RETORNO_COMISIONES_PRE', vProcedure ,io_contador);

-- v10 Se obtienen los datos agrupados por movimiento de poliza para determinar los datos de los mediadores principales a los que se debe asignar los campos de prima
	INSERT INTO EXT.MEDIADOR_PRINCIPAL_TMP
		SELECT
			POL_ANUALIDAD,
			COD_GARANTIA,
			CUE_RIESGO,
			MES_EMISION_PRIMA,
			FEC_MOVIMIEN,
			NUM_RECIBO,
			NUM_MOVTO,
			TPO_MOVTO,
			TPO_COMISION,
			MAX(CANAL_DISTRIB) AS MAX_CANAL_DISTRIB,
			MIN(CANAL_DISTRIB) AS MIN_CANAL_DISTRIB,
			MAX(POR_COMISIONAPL) AS MAX_POR_COMISIONAPL,
			MIN(POR_COMISIONAPL) AS MIN_POR_COMISIONAPL,
			MAX(MEDIADOR || '-' || COD_SUBMEDIADOR) as Max_mediador,
			MIN(MEDIADOR || '-' || COD_SUBMEDIADOR) as Min_mediador,
			count(distinct MEDIADOR || '-' || COD_SUBMEDIADOR) as NUM_Mediadores
		FROM EXT.EXT_RETORNO_COMISIONES_PRE
		GROUP BY
			POL_ANUALIDAD,
			COD_GARANTIA,
			CUE_RIESGO,
			MES_EMISION_PRIMA,
			FEC_MOVIMIEN,
			NUM_RECIBO,
			NUM_MOVTO,
			TPO_MOVTO,
			TPO_COMISION;

	--Inserción de los creditos cruzando con la tabla MEDIADOR_PRINCIPAL_TMP para determinar a que mediadores aplicar los campos de PRIMA
	
	DELETE FROM EXT.EXT_RETORNO_COMISIONES_GROUP WHERE PERIODSEQ = vPeriodSeq;

	INSERT INTO EXT.EXT_RETORNO_COMISIONES_GROUP (
		IND_REGISTRO, MES, POL_ANUALIDAD, COD_GARANTIA, CUE_RIESGO, CANAL_DISTRIB, MEDIADOR, DELEG_MEDIADOR, MES_EMISION_PRIMA, IMP_PEMITIDA, IMP_PCOBRADA, IMP_PDEVENGADA, IMP_PENOCOB_INI,
		IMP_PENOCOB_FIN, IMP_PENOADQ_INI, IMP_PENOADQ_FIN, IMP_PDEVNOE_INI, IMP_PDEVNOE_FIN, IMP_PEMIINTER, IMP_COMISPEMI, IMP_PCOBINTER, IMP_COMISPCOB, IMP_PDEVPTEMINT_FIN, IMP_COMPDEVPTEMINT_FIN,
		POR_COMISIONAPL, COD_MONEDA_GES, FEC_MOVIMIEN, NUM_RECIBO, NUM_MOVTO, TPO_MOVTO, COD_SUBMEDIADOR, TPO_COMISION, IMP_PEMITIDA_DIV, IMP_PCOBRADA_DIV, IMP_PEMIINTER_DIV, IMP_COMISPEMI_DIV,
		IMP_PCOBINTER_DIV, IMP_COMISPCOB_DIV, IMP_PDEVENGADA_DIV, IMP_PENOADQ_INI_DIV, IMP_PENOADQ_FIN_DIV, IMP_PDEVNOE_INI_DIV, IMP_PDEVNOE_FIN_DIV, IMP_PDEVPTEMINT_FIN_DIV,
		IMP_COMPDEVPTEMINT_FIN_DIV, COD_MONEDA_DIV, PERIODSEQ, PERIODNAME
	)
		SELECT 
			pre.IND_REGISTRO,
			pre.MES,
			pre.POL_ANUALIDAD,
			pre.COD_GARANTIA,
			pre.CUE_RIESGO,
 			pre.CANAL_DISTRIB,
 			pre.MEDIADOR,
			pre.DELEG_MEDIADOR,
			pre.MES_EMISION_PRIMA,
			pre.IMP_PEMITIDA,
			pre.IMP_PCOBRADA,
			pre.IMP_PDEVENGADA,
			pre.IMP_PENOCOB_INI,
			pre.IMP_PENOCOB_FIN,
			pre.IMP_PENOADQ_INI,
			pre.IMP_PENOADQ_FIN,
			pre.IMP_PDEVNOE_INI,
			pre.IMP_PDEVNOE_FIN,
			CASE WHEN ifNull(tmp.NUM_MEDIADORES,0) < 2 THEN pre.IMP_PEMIINTER
							-- No es el maximo porcentaje de comision
				 ELSE CASE WHEN pre.POR_COMISIONAPL <  tmp.MAX_POR_COMISIONAPL THEN 0
							-- Es el maximo y es diferente del minimo
					       WHEN pre.POR_COMISIONAPL =  tmp.MAX_POR_COMISIONAPL AND  pre.POR_COMISIONAPL <>  tmp.MIN_POR_COMISIONAPL THEN pre.IMP_PEMIINTER
								-- Si es el maximo porcentaje de comision (los dos son iguales)			 
					        ELSE CASE WHEN pre.CANAL_DISTRIB = tmp.MAX_CANAL_DISTRIB AND pre.CANAL_DISTRIB = tmp.MIN_CANAL_DISTRIB 
									-- Igual canal de ditrib. se busca menor numero de mediador
									THEN CASE WHEN (pre.MEDIADOR || '-' || pre.COD_SUBMEDIADOR) =  tmp.MIN_MEDIADOR 
										  THEN pre.IMP_PEMIINTER
									  	  ELSE 0 END
									--No son iguales los canales de distribucion
									ELSE CASE WHEN pre.CANAL_DISTRIB = tmp.MAX_CANAL_DISTRIB
										  THEN pre.IMP_PEMIINTER
									  	  ELSE 0 END
									END	
					 END
			END AS IMP_PEMIINTER,
			pre.IMP_COMISPEMI,
			CASE WHEN ifNull(tmp.NUM_MEDIADORES,0) < 2 THEN pre.IMP_PCOBINTER
							-- No es el maximo porcentaje de comision
				 ELSE CASE WHEN pre.POR_COMISIONAPL <  tmp.MAX_POR_COMISIONAPL THEN 0
							-- Es el maximo y es diferente del minimo
					       WHEN pre.POR_COMISIONAPL =  tmp.MAX_POR_COMISIONAPL AND  pre.POR_COMISIONAPL <>  tmp.MIN_POR_COMISIONAPL THEN pre.IMP_PCOBINTER
								-- Si es el maximo porcentaje de comision (los dos son iguales)			 
					        ELSE CASE WHEN pre.CANAL_DISTRIB = tmp.MAX_CANAL_DISTRIB AND pre.CANAL_DISTRIB = tmp.MIN_CANAL_DISTRIB 
									-- Igual canal de ditrib. se busca menor numero de mediador
									THEN CASE WHEN (pre.MEDIADOR || '-' || pre.COD_SUBMEDIADOR) =  tmp.MIN_MEDIADOR 
										  THEN pre.IMP_PCOBINTER
									  	  ELSE 0 END
									--No son iguales los canales de distribucion
									ELSE CASE WHEN pre.CANAL_DISTRIB = tmp.MAX_CANAL_DISTRIB
										  THEN pre.IMP_PCOBINTER
									  	  ELSE 0 END
									END	
					 END
			END AS IMP_PCOBINTER,
			pre.IMP_COMISPCOB,
			pre.IMP_PDEVPTEMINT_FIN,
			pre.IMP_COMPDEVPTEMINT_FIN,
			pre.POR_COMISIONAPL,
			pre.COD_MONEDA_GES,
			pre.FEC_MOVIMIEN,
			pre.NUM_RECIBO,
			pre.NUM_MOVTO,
			pre.TPO_MOVTO,
			pre.COD_SUBMEDIADOR,
			pre.TPO_COMISION,
			pre.IMP_PEMITIDA_DIV,
			pre.IMP_PCOBRADA_DIV,
			CASE WHEN ifNull(tmp.NUM_MEDIADORES,0) < 2 THEN pre.IMP_PEMIINTER_DIV
							-- No es el maximo porcentaje de comision
				 ELSE CASE WHEN pre.POR_COMISIONAPL <  tmp.MAX_POR_COMISIONAPL THEN 0
							-- Es el maximo y es diferente del minimo
					       WHEN pre.POR_COMISIONAPL =  tmp.MAX_POR_COMISIONAPL AND  pre.POR_COMISIONAPL <>  tmp.MIN_POR_COMISIONAPL THEN pre.IMP_PEMIINTER_DIV
								-- Si es el maximo porcentaje de comision (los dos son iguales)			 
					        ELSE CASE WHEN pre.CANAL_DISTRIB = tmp.MAX_CANAL_DISTRIB AND pre.CANAL_DISTRIB = tmp.MIN_CANAL_DISTRIB 
									-- Igual canal de ditrib. se busca menor numero de mediador
									THEN CASE WHEN (pre.MEDIADOR || '-' || pre.COD_SUBMEDIADOR) =  tmp.MIN_MEDIADOR 
										  THEN pre.IMP_PEMIINTER_DIV
									  	  ELSE 0 END
									--No son iguales los canales de distribucion
									ELSE CASE WHEN pre.CANAL_DISTRIB = tmp.MAX_CANAL_DISTRIB
										  THEN pre.IMP_PEMIINTER_DIV
									  	  ELSE 0 END
									END	
					 END
			END AS IMP_PEMIINTER_DIV,
			pre.IMP_COMISPEMI_DIV,
			CASE WHEN ifNull(tmp.NUM_MEDIADORES,0) < 2 THEN pre.IMP_PCOBINTER_DIV
							-- No es el maximo porcentaje de comision
				 ELSE CASE WHEN pre.POR_COMISIONAPL <  tmp.MAX_POR_COMISIONAPL THEN 0
							-- Es el maximo y es diferente del minimo
					       WHEN pre.POR_COMISIONAPL =  tmp.MAX_POR_COMISIONAPL AND  pre.POR_COMISIONAPL <>  tmp.MIN_POR_COMISIONAPL THEN pre.IMP_PCOBINTER_DIV
								-- Si es el maximo porcentaje de comision (los dos son iguales)			 
					        ELSE CASE WHEN pre.CANAL_DISTRIB = tmp.MAX_CANAL_DISTRIB AND pre.CANAL_DISTRIB = tmp.MIN_CANAL_DISTRIB 
									-- Igual canal de ditrib. se busca menor numero de mediador
									THEN CASE WHEN (pre.MEDIADOR || '-' || pre.COD_SUBMEDIADOR) =  tmp.MIN_MEDIADOR 
										  THEN pre.IMP_PCOBINTER_DIV
									  	  ELSE 0 END
									--No son iguales los canales de distribucion
									ELSE CASE WHEN pre.CANAL_DISTRIB = tmp.MAX_CANAL_DISTRIB
										  THEN pre.IMP_PCOBINTER_DIV
									  	  ELSE 0 END
									END	
					 END
			END AS IMP_PCOBINTER_DIV,
			pre.IMP_COMISPCOB_DIV,
			pre.IMP_PDEVENGADA_DIV,
			pre.IMP_PENOADQ_INI_DIV,
			pre.IMP_PENOADQ_FIN_DIV,
			pre.IMP_PDEVNOE_INI_DIV,
			pre.IMP_PDEVNOE_FIN_DIV,
			pre.IMP_PDEVPTEMINT_FIN_DIV,
			pre.IMP_COMPDEVPTEMINT_FIN_DIV,
			pre.COD_MONEDA_DIV,
			pre.PERIODSEQ,
			pre.PERIODNAME
		FROM EXT.EXT_RETORNO_COMISIONES_PRE pre
		LEFT JOIN EXT.MEDIADOR_PRINCIPAL_TMP tmp ON
			pre.POL_ANUALIDAD= tmp.POL_ANUALIDAD AND
			pre.COD_GARANTIA= tmp.COD_GARANTIA AND
			pre.CUE_RIESGO= tmp.CUE_RIESGO AND
			case when pre.MES_EMISION_PRIMA is null and  tmp.MES_EMISION_PRIMA is null then 1
				 when pre.MES_EMISION_PRIMA = tmp.MES_EMISION_PRIMA then 1 
			else 0 end  = 1 AND
--			pre.MES_EMISION_PRIMA= tmp.MES_EMISION_PRIMA AND
			pre.FEC_MOVIMIEN= tmp.FEC_MOVIMIEN AND
			case when pre.NUM_RECIBO is null and  tmp.NUM_RECIBO is null then 1
				 when pre.NUM_RECIBO = tmp.NUM_RECIBO then 1 
			else 0 end  = 1 AND
			pre.NUM_MOVTO= tmp.NUM_MOVTO AND
			pre.TPO_MOVTO= tmp.TPO_MOVTO AND
			pre.TPO_COMISION= tmp.TPO_COMISION;

	SELECT COUNT(*) INTO filasInsertadasGroup FROM EXT.EXT_RETORNO_COMISIONES_GROUP WHERE PERIODSEQ = vPeriodSeq;
	
	CALL LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'SE HAN INSERTADO '|| filasInsertadasGroup ||' FILAS EN LA TABLA: EXT.EXT_RETORNO_COMISIONES_GROUP', vProcedure ,io_contador);
	
/*


	
	INSERT INTO EXT.EXT_RETORNO_COMISIONES_GROUP (
		IND_REGISTRO, MES, POL_ANUALIDAD, COD_GARANTIA, CUE_RIESGO, CANAL_DISTRIB, MEDIADOR, DELEG_MEDIADOR, MES_EMISION_PRIMA, IMP_PEMITIDA, IMP_PCOBRADA, IMP_PDEVENGADA, IMP_PENOCOB_INI,
		IMP_PENOCOB_FIN, IMP_PENOADQ_INI, IMP_PENOADQ_FIN, IMP_PDEVNOE_INI, IMP_PDEVNOE_FIN, IMP_PEMIINTER, IMP_COMISPEMI, IMP_PCOBINTER, IMP_COMISPCOB, IMP_PDEVPTEMINT_FIN, IMP_COMPDEVPTEMINT_FIN,
		POR_COMISIONAPL, COD_MONEDA_GES, FEC_MOVIMIEN, NUM_RECIBO, NUM_MOVTO, TPO_MOVTO, COD_SUBMEDIADOR, TPO_COMISION, IMP_PEMITIDA_DIV, IMP_PCOBRADA_DIV, IMP_PEMIINTER_DIV, IMP_COMISPEMI_DIV,
		IMP_PCOBINTER_DIV, IMP_COMISPCOB_DIV, IMP_PDEVENGADA_DIV, IMP_PENOADQ_INI_DIV, IMP_PENOADQ_FIN_DIV, IMP_PDEVNOE_INI_DIV, IMP_PDEVNOE_FIN_DIV, IMP_PDEVPTEMINT_FIN_DIV,
		IMP_COMPDEVPTEMINT_FIN_DIV, COD_MONEDA_DIV, PERIODSEQ, PERIODNAME
	)
	
		SELECT
			IND_REGISTRO,
			MES,
			POL_ANUALIDAD,
			COD_GARANTIA,
			CUE_RIESGO,
			MAX(CANAL_DISTRIB) AS CANAL_DISTRIB,
			--MAX(CASE WHEN ACTIVO_CIC = 1 THEN MEDIADOR ELSE '' END) AS MEDIADOR,  --v09
			RIGHT(MAX(to_varchar(ACTIVO_CIC) || Ifnull(MEDIADOR,'0000') ), 4) AS MEDIADOR,
			MAX(CASE WHEN ACTIVO_CIC = 1 THEN DELEG_MEDIADOR END) AS DELEG_MEDIADOR,
			MES_EMISION_PRIMA,
			SUM(IMP_PEMITIDA) AS IMP_PEMITIDA,
			SUM(IMP_PCOBRADA) AS IMP_PCOBRADA,
			SUM(IMP_PDEVENGADA) AS IMP_PDEVENGADA,
			SUM(IMP_PENOCOB_INI) AS IMP_PENOCOB_INI,
			SUM(IMP_PENOCOB_FIN) AS IMP_PENOCOB_FIN,
			SUM(IMP_PENOADQ_INI) AS IMP_PENOADQ_INI,
			SUM(IMP_PENOADQ_FIN) AS IMP_PENOADQ_FIN,
			SUM(IMP_PDEVNOE_INI) AS IMP_PDEVNOE_INI,
			SUM(IMP_PDEVNOE_FIN) AS IMP_PDEVNOE_FIN,
			SUM(IMP_PEMIINTER) AS IMP_PEMIINTER,
			SUM(IMP_COMISPEMI) AS IMP_COMISPEMI,
			SUM(IMP_PCOBINTER) AS IMP_PCOBINTER,
			SUM(IMP_COMISPCOB) AS IMP_COMISPCOB,
			SUM(IMP_PDEVPTEMINT_FIN) AS IMP_PDEVPTEMINT_FIN,
			SUM(IMP_COMPDEVPTEMINT_FIN) AS IMP_COMPDEVPTEMINT_FIN,
			AVG(POR_COMISIONAPL) AS POR_COMISIONAPL,
			COD_MONEDA_GES,
			FEC_MOVIMIEN,
			NUM_RECIBO,
			NUM_MOVTO,
			TPO_MOVTO,
			--MAX(CASE WHEN ACTIVO_CIC = 1 THEN COD_SUBMEDIADOR END) AS COD_SUBMEDIADOR, --v09
			RIGHT(MAX(to_varchar(ACTIVO_CIC) || Ifnull(COD_SUBMEDIADOR,'0000') ), 4) AS COD_SUBMEDIADOR,
			TPO_COMISION,
			SUM(IMP_PEMITIDA_DIV) AS IMP_PEMITIDA_DIV,
			SUM(IMP_PCOBRADA_DIV) AS IMP_PCOBRADA_DIV,
			SUM(IMP_PEMIINTER_DIV) AS IMP_PEMIINTER_DIV,
			SUM(IMP_COMISPEMI_DIV) AS IMP_COMISPEMI_DIV,
			SUM(IMP_PCOBINTER_DIV) AS IMP_PCOBINTER_DIV,
			SUM(IMP_COMISPCOB_DIV) AS IMP_COMISPCOB_DIV,
			SUM(IMP_PDEVENGADA_DIV) AS IMP_PDEVENGADA_DIV,
			SUM(IMP_PENOADQ_INI_DIV) AS IMP_PENOADQ_INI_DIV,
			SUM(IMP_PENOADQ_FIN_DIV) AS IMP_PENOADQ_FIN_DIV,
			SUM(IMP_PDEVNOE_INI_DIV) AS IMP_PDEVNOE_INI_DIV,
			SUM(IMP_PDEVNOE_FIN_DIV) AS IMP_PDEVNOE_FIN_DIV,
			SUM(IMP_PDEVPTEMINT_FIN_DIV) AS IMP_PDEVPTEMINT_FIN_DIV,
			SUM(IMP_COMPDEVPTEMINT_FIN_DIV) AS IMP_COMPDEVPTEMINT_FIN_DIV,
			COD_MONEDA_DIV,
			PERIODSEQ,
			PERIODNAME
		FROM EXT.EXT_RETORNO_COMISIONES_PRE
		GROUP BY
			IND_REGISTRO,
			MES,
			POL_ANUALIDAD,
			COD_GARANTIA,
			CUE_RIESGO,
			MES_EMISION_PRIMA,
			COD_MONEDA_GES,
			FEC_MOVIMIEN,
			NUM_RECIBO,
			NUM_MOVTO,
			TPO_MOVTO,
			TPO_COMISION,
			COD_MONEDA_DIV,
			PERIODSEQ,
			PERIODNAME;
*/	
	--Se duplican todos los registros de la tabla group poniendo el importe de comisiones emitida y cobrada, el código de mediador y el código de la delegación del mediador a 0
	
	INSERT INTO EXT.EXT_RETORNO_COMISIONES_GROUP (
		IND_REGISTRO, MES, POL_ANUALIDAD, COD_GARANTIA, CUE_RIESGO, CANAL_DISTRIB, MEDIADOR, DELEG_MEDIADOR, MES_EMISION_PRIMA, IMP_PEMITIDA, IMP_PCOBRADA, IMP_PDEVENGADA, IMP_PENOCOB_INI,
		IMP_PENOCOB_FIN, IMP_PENOADQ_INI, IMP_PENOADQ_FIN, IMP_PDEVNOE_INI, IMP_PDEVNOE_FIN, IMP_PEMIINTER, IMP_COMISPEMI, IMP_PCOBINTER, IMP_COMISPCOB, IMP_PDEVPTEMINT_FIN, IMP_COMPDEVPTEMINT_FIN,
		POR_COMISIONAPL, COD_MONEDA_GES, FEC_MOVIMIEN, NUM_RECIBO, NUM_MOVTO, TPO_MOVTO, COD_SUBMEDIADOR, TPO_COMISION, IMP_PEMITIDA_DIV, IMP_PCOBRADA_DIV, IMP_PEMIINTER_DIV, IMP_COMISPEMI_DIV,
		IMP_PCOBINTER_DIV, IMP_COMISPCOB_DIV, IMP_PDEVENGADA_DIV, IMP_PENOADQ_INI_DIV, IMP_PENOADQ_FIN_DIV, IMP_PDEVNOE_INI_DIV, IMP_PDEVNOE_FIN_DIV, IMP_PDEVPTEMINT_FIN_DIV,
		IMP_COMPDEVPTEMINT_FIN_DIV, COD_MONEDA_DIV, PERIODSEQ, PERIODNAME
	)
	
	-- Peticion (v7)  de Dolores Albarran: en los registros con cod_canal = 1, me puedes poner a 0 los campos imp_comispemi_div e imp_comispcob_div 
	
		SELECT IND_REGISTRO, MES, POL_ANUALIDAD, COD_GARANTIA, CUE_RIESGO, CANAL_DISTRIB, '0000' AS MEDIADOR, '000' AS DELEG_MEDIADOR, MES_EMISION_PRIMA, IMP_PEMITIDA, IMP_PCOBRADA, 
		IMP_PDEVENGADA, IMP_PENOCOB_INI, IMP_PENOCOB_FIN, IMP_PENOADQ_INI, IMP_PENOADQ_FIN, IMP_PDEVNOE_INI, IMP_PDEVNOE_FIN, IMP_PEMIINTER * (-1) AS IMP_PEMIINTER, IMP_COMISPEMI, 
		IMP_PCOBINTER * (-1) AS IMP_PCOBINTER, IMP_COMISPCOB, IMP_PDEVPTEMINT_FIN, IMP_COMPDEVPTEMINT_FIN, POR_COMISIONAPL, COD_MONEDA_GES, FEC_MOVIMIEN, NUM_RECIBO, NUM_MOVTO, TPO_MOVTO, 
		COD_SUBMEDIADOR, TPO_COMISION, IMP_PEMITIDA_DIV, IMP_PCOBRADA_DIV, IMP_PEMIINTER_DIV * (-1) AS IMP_PEMIINTER_DIV, 0 as IMP_COMISPEMI_DIV, IMP_PCOBINTER_DIV * (-1) AS IMP_PCOBINTER_DIV, 
		0 as IMP_COMISPCOB_DIV, IMP_PDEVENGADA_DIV, IMP_PENOADQ_INI_DIV, IMP_PENOADQ_FIN_DIV, IMP_PDEVNOE_INI_DIV, IMP_PDEVNOE_FIN_DIV, IMP_PDEVPTEMINT_FIN_DIV, IMP_COMPDEVPTEMINT_FIN_DIV, 
		COD_MONEDA_DIV, PERIODSEQ, PERIODNAME
		FROM EXT.EXT_RETORNO_COMISIONES_GROUP
		WHERE PERIODSEQ = vPeriodSeq;
	
	SELECT COUNT(*) INTO filasInsertadasGroup FROM EXT.EXT_RETORNO_COMISIONES_GROUP WHERE PERIODSEQ = vPeriodSeq and MEDIADOR='0000';
	
	CALL LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'SE HAN DUPLICADO '|| filasInsertadasGroup ||' FILAS EN LA TABLA: EXT.EXT_RETORNO_COMISIONES_GROUP', vProcedure ,io_contador);
	
			INSERT INTO "EXT"."EXT_RETORNO_COMISIONES_GROUP_TXT" (IND_REGISTRO, MES, POL_ANUALIDAD, COD_GARANTIA, CUE_RIESGO, CANAL_DISTRIB, MEDIADOR, DELEG_MEDIADOR, MES_EMISION_PRIMA, IMP_PEMITIDA, IMP_PCOBRADA, IMP_PDEVENGADA, IMP_PENOCOB_INI, IMP_PENOCOB_FIN, IMP_PENOADQ_INI, IMP_PENOADQ_FIN, IMP_PDEVNOE_INI, IMP_PDEVNOE_FIN, IMP_PEMIINTER, IMP_COMISPEMI, IMP_PCOBINTER, IMP_COMISPCOB, IMP_PDEVPTEMINT_FIN, IMP_COMPDEVPTEMINT_FIN, POR_COMISIONAPL, COD_MONEDA_GES, FEC_MOVIMIEN, NUM_RECIBO, NUM_MOVTO, TPO_MOVTO, COD_SUBMEDIADOR, TPO_COMISION, IMP_PEMITIDA_DIV, IMP_PCOBRADA_DIV, IMP_PEMIINTER_DIV, IMP_COMISPEMI_DIV, IMP_PCOBINTER_DIV, IMP_COMISPCOB_DIV, IMP_PDEVENGADA_DIV, IMP_PENOADQ_INI_DIV, IMP_PENOADQ_FIN_DIV, IMP_PDEVNOE_INI_DIV, IMP_PDEVNOE_FIN_DIV, IMP_PDEVPTEMINT_FIN_DIV, IMP_COMPDEVPTEMINT_FIN_DIV, COD_MONEDA_DIV)
			SELECT
				'HECHO02' as IND_REGISTRO,
				LPAD(IFNULL(cg.MES,'0'), 6, 0) as MES,
				LPAD(IFNULL(cg.POL_ANUALIDAD,'0'), 19, 0) as POL_ANUALIDAD,
				LPAD(IFNULL(cg.COD_GARANTIA,'0'), 2, 0) as COD_GARANTIA,
				LPAD(IFNULL(cg.CUE_RIESGO,'0'), 1, 0) as CUE_RIESGO,
				LPAD(IFNULL(CASE WHEN cg.MEDIADOR = '0000' THEN '1' ELSE cg.CANAL_DISTRIB END,'0'), 1, 0) as CANAL_DISTRIB,
				LPAD(IFNULL(cg.MEDIADOR,'0'), 4, 0) as MEDIADOR,
				LPAD(IFNULL(cg.DELEG_MEDIADOR,'0'), 3, 0) as DELEG_MEDIADOR,
				LPAD(IFNULL(cg.MES_EMISION_PRIMA,'0'), 6, 0) as MES_EMISION_PRIMA,
				'000000000000000000', --IMP_PEMITIDA
				'000000000000000000', --IMP_PCOBRADA
				'000000000000000000',  --IMP_PDEVENGADA
				'000000000000000000',  --IMP_PENOCOB_INI
				'000000000000000000',  --IMP_PENOCOB_FIN
				'000000000000000000',  --IMP_PENOADQ_INI
				'000000000000000000',  --IMP_PENOADQ_FIN
				'000000000000000000',  --IMP_PDEVNOE_INI
				'000000000000000000',  --IMP_PDEVNOE_FIN
				REPLACE(EXT.LIB_GLOBAL_CESCE:conversionImp(cg.IMP_PEMIINTER, 19), '.', ''),   --IMP_PEMIINTER
				REPLACE(EXT.LIB_GLOBAL_CESCE:conversionImp(CASE WHEN cg.mediador = '0000' THEN 0 ELSE cg.IMP_COMISPEMI END, 19), '.', ''),   --IMP_COMISPEMI
				REPLACE(EXT.LIB_GLOBAL_CESCE:conversionImp(cg.IMP_PCOBINTER, 19), '.', ''),   --IMP_PCOBINTER
				REPLACE(EXT.LIB_GLOBAL_CESCE:conversionImp(CASE WHEN cg.mediador = '0000' THEN 0 ELSE cg.IMP_COMISPCOB END, 19), '.', ''),   --IMP_COMISPCOB
				'000000000000000000',  --IMP_PDEVPTEMINT_FIN
				'000000000000000000',  --IMP_COMPDEVPTEM_FIN
				--REPLACE(LPAD(TO_VARCHAR(cg.POR_COMISIONAPL*100, '999.99'), 6, 0), '.', ''),   --POR_COMISIONAPL	DECIMAL	5
				REPLACE(EXT.LIB_GLOBAL_CESCE:conversionImp(cg.POR_COMISIONAPL*10, 6), '.', ''), -- v12 multiplicamos por 10 por el efecto de la función
				LPAD(IFNULL(cg.COD_MONEDA_GES,'0'), 3, 0),  
				LPAD(IFNULL(cg.FEC_MOVIMIEN,'0'), 8, 0),  
				LPAD(IFNULL(cg.NUM_RECIBO,'0'), 6, 0), 
				LPAD(IFNULL(cg.NUM_MOVTO,'0'), 4, 0),  
				LPAD(IFNULL(cg.TPO_MOVTO,'0'), 3, 0),  
				LPAD(IFNULL(cg.COD_SUBMEDIADOR,'0'), 4, 0),  
				LPAD(IFNULL(cg.TPO_COMISION,'0'), 3, 0),  
				'000000000000000000',  --IMP_PEMITIDA_DIV	DECIMAL	18
				'000000000000000000',  --IMP_PCOBRADA_DIV	DECIMAL	18
				REPLACE(EXT.LIB_GLOBAL_CESCE:conversionImp(ifnull(cg.IMP_PEMIINTER_DIV,0), 19), '.', ''),   --IMP_PEMIINTER_DIV	DECIMAL	18
				REPLACE(EXT.LIB_GLOBAL_CESCE:conversionImp(ifnull(cg.IMP_COMISPEMI_DIV,0), 19), '.', ''),   --IMP_COMISPEMI_DIV	DECIMAL	18
				REPLACE(EXT.LIB_GLOBAL_CESCE:conversionImp(ifnull(cg.IMP_PCOBINTER_DIV,0), 19), '.', ''),   --IMP_PCOBINTER_DIV	DECIMAL	18
				REPLACE(EXT.LIB_GLOBAL_CESCE:conversionImp(ifnull(cg.IMP_COMISPCOB_DIV,0), 19), '.', ''),   --IMP_COMISPCOB_DIV	DECIMAL	18
				'000000000000000000',  --IMP_PDEVENGADA_DIV	DECIMAL	18
				'000000000000000000',  --IMP_PENOADQ_INI_DIV	DECIMAL	18
				'000000000000000000',  --IMP_PENOADQ_FIN_DIV	DECIMAL	18
				'000000000000000000',  --IMP_PDEVNOE_INI_DIV	DECIMAL	18
				'000000000000000000',  --IMP_PDEVNOE_FIN_DIV	DECIMAL	18
				'000000000000000000',  --IMP_PDEVPTE_FIN_DIV	DECIMAL	18
				'000000000000000000',  --IMP_COMPDEV_FIN_DIV	DECIMAL	18
				LPAD(IFNULL(cg.COD_MONEDA_DIV,'0'), 3, 0) as COD_MONEDA_DIV
			FROM EXT.EXT_RETORNO_COMISIONES_GROUP cg
			WHERE PERIODSEQ = (SELECT PERIODSEQ FROM TCMP.CS_PLRUN WHERE PIPELINERUNSEQ = pPlRunSeq);
		COMMIT;

	CALL LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'SE HAN INSERTADO '|| To_VARCHAR(::ROWCOUNT) ||' FILAS EN LA TABLA: EXT.EXT_RETORNO_COMISIONES_GROUP_TXT', vProcedure ,io_contador);

			INSERT INTO "EXT"."EXT_RETORNO_COMISIONES_OUT"
			SELECT
				IND_REGISTRO || 
				MES || 
				POL_ANUALIDAD || 
				COD_GARANTIA || 
				CUE_RIESGO || 
				CANAL_DISTRIB || 
				MEDIADOR || 
				DELEG_MEDIADOR || 
				MES_EMISION_PRIMA || 
				IMP_PEMITIDA || 
				IMP_PCOBRADA || 
				IMP_PDEVENGADA || 
				IMP_PENOCOB_INI || 
				IMP_PENOCOB_FIN || 
				IMP_PENOADQ_INI || 
				IMP_PENOADQ_FIN || 
				IMP_PDEVNOE_INI || 
				IMP_PDEVNOE_FIN || 
				IMP_PEMIINTER || 
				IMP_COMISPEMI || 
				IMP_PCOBINTER || 
				IMP_COMISPCOB || 
				IMP_PDEVPTEMINT_FIN || 
				IMP_COMPDEVPTEMINT_FIN || 
				POR_COMISIONAPL || 
				COD_MONEDA_GES || 
				FEC_MOVIMIEN || 
				NUM_RECIBO || 
				NUM_MOVTO || 
				TPO_MOVTO || 
				COD_SUBMEDIADOR || 
				TPO_COMISION || 
				IMP_PEMITIDA_DIV || 
				IMP_PCOBRADA_DIV || 
				IMP_PEMIINTER_DIV || 
				IMP_COMISPEMI_DIV || 
				IMP_PCOBINTER_DIV || 
				IMP_COMISPCOB_DIV || 
				IMP_PDEVENGADA_DIV || 
				IMP_PENOADQ_INI_DIV || 
				IMP_PENOADQ_FIN_DIV || 
				IMP_PDEVNOE_INI_DIV || 
				IMP_PDEVNOE_FIN_DIV || 
				IMP_PDEVPTEMINT_FIN_DIV || 
				IMP_COMPDEVPTEMINT_FIN_DIV || 
				COD_MONEDA_DIV as LINEACIC
			FROM EXT.EXT_RETORNO_COMISIONES_GROUP_TXT cg
			ORDER BY POL_ANUALIDAD, COD_GARANTIA, CUE_RIESGO, MES_EMISION_PRIMA, NUM_RECIBO, NUM_MOVTO, TPO_MOVTO, MEDIADOR DESC;
	
/*
			INSERT INTO "EXT"."EXT_RETORNO_COMISIONES_OUT" VALUES(linea1);
			contador := contador + 1;

			-- Se hace un commit cada 1000 registros y se guarda en el log el progreso
			IF MOD (contador, commit_interval) = 0 THEN
				COMMIT;
				CALL LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Commit - Lineas insertadas ' || to_varchar(contador), vProcedure ,io_contador);
			END IF;
*/
--	END FOR;

	COMMIT; -- Realiza un último commit al final
	CALL LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Insertados ' || To_VARCHAR(::ROWCOUNT)  || ' registros en EXT_RETORNO_COMISIONES_OUT' , vProcedure ,io_contador);

	--SELECT 'PROD.TRA.CIC.COMISIONS.'||TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMM')||'.txt' INTO FILENAME from dummy;
	--SELECT 'PROD.TRA.CIC.COMISIONS.'||TO_VARCHAR(vPeriodStartdate, 'YYYYMM')||'.txt' INTO FILENAME from dummy;
	SELECT 'PROD.TRA.CIC.COMISIONS.'||TO_VARCHAR(vPeriodStartdate, 'YYYYMM')||'' INTO FILENAME from dummy;
	
	CALL LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Fichero de salida' || FILENAME, vProcedure ,io_contador);

	CALL LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'FIN PROCEDIMIENTO with SESSION_USER ' || SESSION_USER, vProcedure ,io_contador);

END;
