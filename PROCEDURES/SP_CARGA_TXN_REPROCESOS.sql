CREATE OR REPLACE PROCEDURE "EXT"."SP_CARGA_TXN_REPROCESOS" LANGUAGE SQLSCRIPT SQL SECURITY DEFINER DEFAULT SCHEMA "EXT" AS
/*---------------------------------------------------------------------
    | Author: Marcos Rodellar
    | Company: Inycom
    | Initial Version Date: 2024-05-24
    |----------------------------------------------------------------------
    | Procedure Purpose: Cargar Transacciones en SAP COMMISSIONS a traves de las tablas de STAGE con 4 tipos de origenes de los datos:
    | 1. Resultados con cálculos (TIPO_REPROCESO like '%-CRED'): Tabla de Transacciones + Tabla de crédito con los resultados. Genera 2 transacciones por cada registro:
    |      a. Generación de una transacción (CS_SALESTRANSACTION) con los valores de PRIMA en NEGATIVO para calculo contrario al que se calculo erroneamente
    |      b. Generación de una transacción (CS_SALESTRANSACTION) con el porcentaje nuevo o vacio segun corrección del plan de compensación, con nuevo mediador y en una nueva fecha de comensación
    | 2. Resultados sin cálculos (TIPO_REPROCESO like '%-TXN'): Tabla de Transacciones y no ha generado crédito. Genera 1 transacciones por cada registro:
    |      a. Generación de una transacción (CS_SALESTRANSACTION) con el porcentaje nuevo o vacio segun corrección del plan de compensación, con nuevo mediador y en una nueva fecha de comensación.
    | 3. Sin Mediador (TIPO_REPROCESO like '%-SINMED'): Tabla de EXT_TXN_RECIBOS. Genera 1 transacciones por cada registro:
    |      a. Generación de una transacción (EXT_TXN_RECIBOS) con el porcentaje nuevo o vacio segun corrección del plan de compensación, con nuevo mediador y en una nueva fecha de comensación.
    | 4. NO CARTERA (TIPO_REPROCESO like '%-NOCAR'): Tabla de EXT_MOVIMIENTO_RECIBOS_HIST. Reprocesa 1 Movimiento por cada registro.
    | El origen de datos es la tabla de TXN_REPROCESOS
    | Version: 01	2024-05-23	Inicial
    | Version: 02	2024-07-18	Se incluyen los nuevos tipos de reprocesos. Para reprocesos de resultados con calculos (-CRED) dentro del mismo mes de liquidación, no se generan movimientos en negativo
    |                           Para los movimientos negativos, no se multiplica por (-1) el valor de la prima, se cambia el tipo de movimiento:
    |                             Tipo Movimiento Original 15,21,51,70 y Estado E (Emitido) --> Tipo Movimiento Ajuste Negativo 62 y Estado AE (Anulado Emitido)
    |                             Tipo Movimiento Original 13 y Estado C (Cobrado)  --> Tipo Movimiento Ajuste Negativo 60 y Estado AC (Anulado Cobrado)
    |                             Tipo Movimiento Original 60 y Estado AC (Anulado Cobrado) --> Tipo Movimiento Ajuste Negativo 13 y Estado C (Cobrado)
    |                             Tipo Movimiento Original 53,55,62 y AE (Anulado Emitido) --> Tipo Movimiento Ajuste Negativo 15 y  Estado E (Emitido)
    | Version: 03	2024-07-31  Para los movimientos negativos, se cambia el ID situacion asociado al tipo de movimiento:
    |                             Estado E (Emitido) --> ID Situacion 21 Emitido - Pdte. Cobro
    |                             Estado C (Cobrado)  --> ID Situacion 22 Emitido - Cobrado Total
    |                             Estado AC (Anulado Cobrado) --> ID Situacion  21 Emitido - Pdte. Cobro
    |                             AE (Anulado Emitido) --> ID Situacion 11 Pte. Emisión - Pdte. Cobro
    | Version: 04	2024-08-05  Las situaciones no estaban bien asignadas en la version 03. Se modifican:
    |                             Estado E (Emitido) -->  estado final 'AE' (GA3) - Mov 62 (GA9) - Sit 11 (GA10) Pte. Emisión - Pdte. Cobro 
    |                             Estado C (Cobrado)  -->  estado final 'AC' (GA3) - Mov 60 (GA9) - Sit 21 (GA10) Emitido - Pdte. Cobro
    |                             Estado AC (Anulado Cobrado) --> estado final 'C' (GA3) - Mov 13 (GA9) - Sit 22 (GA10) Emitido - Cobrado Total
    |                             AE (Anulado Emitido) --> estado final 'E' (GA3) - Mov 15 (GA9) - Sit 21 (GA10) Emitido - Pdte. Cobro
    | Version: 05	2024-09-03  Se modifica el cambio de estado E a AE porque 62 no admitía primas negativas:
    |                             Estado E (Emitido) -->  estado final 'AE' (GA3) - Mov 12 - Anular Recibo (GA9) - Sit 23 Emitido – Anulado (GA10)
    |----------------------------------------------------------------------
    | Resultados con creditos y sin creditos: 
    | 	- Error en la asignación
    | 	- Operaciones especiales
    | 	- Plan comisionamiento
    | 	- Errores Seleccionados en WF reprocesos
    | Las transacciones de periodo actual se deben regenerar, no cambiar el SublineNumber por si actualizan Porcentaje especial o Nuevo Mediador. No cambiar Compensate Date
    |----------------------------------------------------------------------
    | Parametros: 
    |----------------------------------------------------------------------
*/
BEGIN

	DECLARE io_contador Number := 0;
	DECLARE i_Tenant VARCHAR(127);
	DECLARE cVersion VARCHAR(2) := '05';
	DECLARE cReportTable CONSTANT VARCHAR(50) := 'SP_CARGA_TXN_REPROCESOS' || '_v' || cVersion;
	DECLARE reproBatchname VARCHAR(50);
	DECLARE txn_insertadas VARCHAR(10);
	DECLARE codProceso varchar(14);
	DECLARE estadoFiltro varchar(50) := 'PENDIENTE';
	DECLARE IDs_Concatenados VARCHAR(4000);
	DECLARE longitud_cadenaIDs integer;
	DECLARE Num_RegistrosIDs integer;
	DECLARE numTxns integer:=0;
	DECLARE totalTxns integer:=0;
-- ----------------------------- HANDLER EXCEPTION -------------------------
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'SQL ERROR_MESSAGE: ' ||
						IFNULL(::SQL_ERROR_MESSAGE,'') || '. SQL_ERROR_CODE: ' || ::SQL_ERROR_CODE, cReportTable, io_contador);
			RESIGNAL;
		END;
-- ---------------------------------------------------------------------------

	SELECT EXT.LIB_GLOBAL_CESCE:getTenantID() INTO i_Tenant FROM DUMMY;

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INICIO PROCEDIMIENTO ', cReportTable, io_contador);

	-- Codigo de reproceso que se incluirá en el DATASOURCE de la TXN
	SELECT TO_VARCHAR(NOW(),'YYDDDHH24MISSFF3') into codProceso  FROM DUMMY;

	-- Se genera batchname ficticio para la Validación y transferencia a Commissions: REPRO_20230530_180400.txt
	SELECT 'REPRO_'|| TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDD_HH24MISS') || '.txt' INTO reproBatchname FROM DUMMY;
	
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'reproBatchname: ' || reproBatchname || ' DATASOURCE (codProceso):' || codProceso, cReportTable, io_contador);

	-- ------------------------------------------------------------------------------------
	-- BORRAR TABLAS STAGE ¿¿hace falta??
	-- ------------------------------------------------------------------------------------
/*	
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'DELETE TABLAS STAGE PARA TRANSACCIONES YA INSERTADAS ', cReportTable, io_contador);

	DELETE FROM TCMP.CS_STAGESALESTRANSACTION
	WHERE 
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Borrados ' || To_VARCHAR(::ROWCOUNT) || ' registros de CS_STAGESALESTRANSACTION' , cReportTable, io_contador);

-- Se borran las asignaciones de las transacciones no enviadas a liquidar por si se han vuelto a regenerar 
	DELETE FROM TCMP.CS_STAGETRANSACTIONASSIGN
	WHERE 
	
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Borrados ' || To_VARCHAR(::ROWCOUNT) || ' registros de CS_STAGETRANSACTIONASSIGN' , cReportTable, io_contador);
*/
	-- ------------------------------------------------------------------------------------
	-- INSERT TABLAS STAGE Transacciones Negativas
	-- ------------------------------------------------------------------------------------
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INSERT TABLAS STAGE Transacciones Negativas', cReportTable, io_contador);

	INSERT INTO TCMP.CS_STAGETRANSACTIONASSIGN (TENANTID, BATCHNAME, SETNUMBER, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, POSITIONNAME, 
		GENERICATTRIBUTE1, GENERICATTRIBUTE2, GENERICATTRIBUTE3, 
		GENERICNUMBER1, UNITTYPEFORGENERICNUMBER1, GENERICNUMBER2, UNITTYPEFORGENERICNUMBER2, GENERICNUMBER3, UNITTYPEFORGENERICNUMBER3, 
		GENERICBOOLEAN1)
		
	SELECT 
		TX.TENANTID, 
		reproBatchname AS BATCHNAME,
		TA.SETNUMBER AS SETNUMBER,
		TR.ORDERID, 
		TR.LINENUMBER, 
		SUBSTRING(TR.SUBLINENUMBER,1,7) || '9' || SUBSTRING(TR.SUBLINENUMBER,9,5) as NEW_SUBLINENNUMBER, -- char 9: '9' para txn anterior en negativo, '8' para nuevo 
		TR.EVENTTYPEID,
		TR.POSITIONNAME, 
		TA.GENERICATTRIBUTE1, -- canal dist
		TA.GENERICATTRIBUTE2, --mediador
		TA.GENERICATTRIBUTE3, --subclave
		CASE when TA.GENERICNUMBER1 is null or TA.GENERICNUMBER1 = 0 then 1.00 else TA.GENERICNUMBER1 end as GENERICNUMBER1, -- % intermediacion
		'percent' AS UNITTYPEFORGENERICNUMBER1 ,
		TA.GENERICNUMBER2, --idDirTerritorial
		CASE WHEN TA.GENERICNUMBER2 is null THEN NULL ELSE 'integer' END AS UNITTYPEFORGENERICNUMBER2, 
		--CASE WHEN P_ANTERIOR is null THEN null ELSE P_ANTERIOR * (-1) END AS GENERICNUMBER3,
		CASE WHEN P_ANTERIOR is null THEN null ELSE P_ANTERIOR  END AS GENERICNUMBER3, 
		CASE WHEN P_ANTERIOR is null THEN null ELSE 'percent' END AS UNITTYPEFORGENERICNUMBER3 ,
		TA.GENERICBOOLEAN1-- Mediador Principal CIC (GB1) -  En desuso
	FROM TCMP.CS_SALESTRANSACTION TX
	INNER JOIN "EXT"."TXN_REPROCESOS" TR ON TR.SALESTRANSACTIONSEQ = TX.SALESTRANSACTIONSEQ
	INNER JOIN CS_TRANSACTIONASSIGNMENT TA ON TR.SALESTRANSACTIONSEQ = TA.SALESTRANSACTIONSEQ AND TA.POSITIONNAME = TR.POSITIONNAME
	WHERE (TR.TIPO_REPROCESO like '%-CRED') AND -- Negativos solo para reprocesos de transacciones con resultados
			TX.COMPENSATIONDATE < ADD_DAYS(LAST_DAY(ADD_MONTHS(CURRENT_DATE, -1)), 1) AND -- No debe coger las del periodo actual
			ESTADOREG = estadoFiltro; --'NUEVO'

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Se han insertado '  || To_VARCHAR(::ROWCOUNT) || ' en CS_STAGETRANSACTIONASSIGN', cReportTable, io_contador);
	
	INSERT INTO TCMP.CS_STAGESALESTRANSACTION (TENANTID, BATCHNAME, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, PRODUCTID, PRODUCTNAME, VALUE, UNITTYPEFORVALUE, COMPENSATIONDATE, BUSINESSUNITMAP, COMMENTS, GENERICATTRIBUTE1, GENERICATTRIBUTE2, GENERICATTRIBUTE3, GENERICATTRIBUTE4, GENERICATTRIBUTE5, GENERICATTRIBUTE6, GENERICATTRIBUTE7, GENERICATTRIBUTE8, GENERICATTRIBUTE9, GENERICATTRIBUTE10, GENERICATTRIBUTE11, 
	GENERICATTRIBUTE12,GENERICATTRIBUTE13, GENERICATTRIBUTE14, GENERICATTRIBUTE15, GENERICATTRIBUTE16, GENERICATTRIBUTE17, GENERICATTRIBUTE18, GENERICATTRIBUTE19, GENERICATTRIBUTE20, GENERICATTRIBUTE21, GENERICNUMBER1, UNITTYPEFORGENERICNUMBER1, GENERICNUMBER2, UNITTYPEFORGENERICNUMBER2, 
	GENERICNUMBER3, UNITTYPEFORGENERICNUMBER3, GENERICNUMBER4, UNITTYPEFORGENERICNUMBER4,  GENERICNUMBER5, UNITTYPEFORGENERICNUMBER5, GENERICDATE1, GENERICDATE2, GENERICDATE3, GENERICDATE4, GENERICDATE5, GENERICDATE6, GENERICBOOLEAN1, GENERICBOOLEAN2, GENERICBOOLEAN3, 
	GENERICBOOLEAN4, GENERICBOOLEAN6, DATASOURCE)
	
	SELECT 
		TX.TENANTID, 
		reproBatchname AS BATCHNAME,
		TR.ORDERID, 
		TR.LINENUMBER, 
		SUBSTRING(TR.SUBLINENUMBER,1,7) || '9' || SUBSTRING(TR.SUBLINENUMBER,9,5) as NEW_SUBLINENNUMBER, -- char 9: '9' para txn anterior en negativo, '8' para nuevo 
		TR.EVENTTYPEID,
		TX.PRODUCTID, 
		TX.PRODUCTNAME, 
--		TX.VALUE * (-1), -- VALOR DE PRIMA contrario al original
		TX.VALUE, --Se deja el mismo valor de prima, se cambia el tipo Movimiento
		CASE WHEN TX.VALUE is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORVALUE, 
		TR.NEW_COMPENSATIONDATE AS COMPENSATIONDATE,
		TX.BUSINESSUNITMAP as BUSINESSUNITMAP,
		--buname AS BUSINESSUNITNAME,
		TR.COMENTARIOS as COMMENTS,
		TX.GENERICATTRIBUTE1 AS GENERICATTRIBUTE1,
		TX.GENERICATTRIBUTE2 AS GENERICATTRIBUTE2, 
--		TX.GENERICATTRIBUTE3 AS GENERICATTRIBUTE3, 
		CASE TX.GENERICATTRIBUTE3 WHEN 'E' THEN 'AE' 
								  WHEN 'C' THEN 'AC'
								  WHEN 'AC' THEN 'C'
								  WHEN 'AE' THEN 'E'
			ELSE TX.GENERICATTRIBUTE3 END AS GENERICATTRIBUTE3, 
		TX.GENERICATTRIBUTE4 AS GENERICATTRIBUTE4,
		TX.GENERICATTRIBUTE5 AS GENERICATTRIBUTE5,
		TX.GENERICATTRIBUTE6 AS GENERICATTRIBUTE6, 
		TX.GENERICATTRIBUTE7 AS GENERICATTRIBUTE7, 
		TX.GENERICATTRIBUTE8 AS GENERICATTRIBUTE8, 
--		TX.GENERICATTRIBUTE9 AS GENERICATTRIBUTE9, --Tipo Movimiento (GA9)
		CASE TX.GENERICATTRIBUTE3 WHEN 'E' THEN '12' 
								  WHEN 'C' THEN '60'
								  WHEN 'AC' THEN '13'
								  WHEN 'AE' THEN '15'
			ELSE TX.GENERICATTRIBUTE9 END AS GENERICATTRIBUTE9, --Tipo Movimiento Contrario al original (GA9)
		CASE TX.GENERICATTRIBUTE3 WHEN 'E' THEN '23' -- estado final 'AE' - Mov 12 - Sit 23
								  WHEN 'C' THEN '21' -- estado final 'AC' - Mov 60 - Sit 21
								  WHEN 'AC' THEN '22' -- estado final 'C' - Mov 13 - Sit 22
								  WHEN 'AE' THEN '21' -- estado final 'E' - Mov 15 - Sit 21
			ELSE TX.GENERICATTRIBUTE10 END AS GENERICATTRIBUTE10, -- Codigo situacion (GA10) asociado al Tipo Movimiento
		TX.GENERICATTRIBUTE11 AS GENERICATTRIBUTE11, 
		TX.GENERICATTRIBUTE12 AS GENERICATTRIBUTE12,
		TR.CASEID_REPROCESO  AS GENERICATTRIBUTE13, -- CaseID (GA13)
		TX.GENERICATTRIBUTE14 AS GENERICATTRIBUTE14,
		TX.GENERICATTRIBUTE15 AS GENERICATTRIBUTE15, 
		TX.GENERICATTRIBUTE16 AS GENERICATTRIBUTE16,
		TR.NEW_ID_TIPO_RECIBO AS GENERICATTRIBUTE17, 
		TX.GENERICATTRIBUTE18 || ' - ' || TR.NEW_DESC_TIPO_RECIBO || ' NEGATIVO' AS GENERICATTRIBUTE18, -- se añade AJUSTE MANUAL NEGATIVO al tipo actual
		TX.GENERICATTRIBUTE19 AS GENERICATTRIBUTE19, 
		TX.GENERICATTRIBUTE20 AS GENERICATTRIBUTE20, 
		TX.GENERICATTRIBUTE21 AS GENERICATTRIBUTE21, 
		--TX.GENERICNUMBER1 * (-1) AS GENERICNUMBER1, --Importe Precalculado (GN1) contrario al original, normalemente es nulo
		TX.GENERICNUMBER1  AS GENERICNUMBER1, --Importe Precalculado (GN1) no se cambia
		CASE WHEN TX.GENERICNUMBER1 is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORGENERICNUMBER1, 	
		TX.GENERICNUMBER2 AS GENERICNUMBER2,  --Porcentaje Comision (GN2) -NO SE USA - Se trasalado a TX Asignacion
		CASE WHEN TX.GENERICNUMBER2 is null THEN NULL ELSE 'percent' END AS UNITTYPEFORGENERICNUMBER2, 	
		TX.GENERICNUMBER3 AS GENERICNUMBER3,  --Anualidad (GN3)
		CASE WHEN TX.GENERICNUMBER3 is null THEN NULL ELSE 'integer' END AS UNITTYPEFORGENERICNUMBER3, 
		NULL AS GENERICNUMBER4,  --Prima Minima (GN4) - No se tiene en cuenta en reprocesos
		NULL AS UNITTYPEFORGENERICNUMBER4,
--		TX.GENERICNUMBER5  * (-1) AS GENERICNUMBER5,  --Prima con Impuestos (GN5) contrario al original
		TX.GENERICNUMBER5 AS GENERICNUMBER5,  --Prima con Impuestos (GN5)no se cambia
		CASE WHEN TX.GENERICNUMBER5 is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORGENERICNUMBER5, 
		TX.GENERICDATE1 AS GENERICDATE1,
		TX.GENERICDATE2 AS GENERICDATE2,
		TX.GENERICDATE3 AS GENERICDATE3,
		TX.GENERICDATE4 AS GENERICDATE4,
		TX.GENERICDATE5 AS GENERICDATE5,
		TX.GENERICDATE6 AS GENERICDATE6,
		TX.GENERICBOOLEAN1 AS GENERICBOOLEAN1,
		TX.GENERICBOOLEAN2 AS GENERICBOOLEAN2,
		TX.GENERICBOOLEAN3 AS GENERICBOOLEAN3,
		TX.GENERICBOOLEAN4 AS GENERICBOOLEAN4,
		TX.GENERICBOOLEAN6 AS GENERICBOOLEAN6,
		codProceso AS "DATASOURCE"
	FROM TCMP.CS_SALESTRANSACTION TX
	INNER JOIN "EXT"."TXN_REPROCESOS" TR ON TR.SALESTRANSACTIONSEQ = TX.SALESTRANSACTIONSEQ
	INNER JOIN CS_TRANSACTIONASSIGNMENT TA ON TR.SALESTRANSACTIONSEQ = TA.SALESTRANSACTIONSEQ AND TA.POSITIONNAME = TR.POSITIONNAME
--	LEFT JOIN EXT.MODIFICAR_MEDIADOR MED ON MED.POSITIONNAME = TR.NEW_POSITIONNAME
	WHERE (TR.TIPO_REPROCESO like '%-CRED') AND -- Negativos solo para reprocesos de transacciones con resultados
			TX.COMPENSATIONDATE < ADD_DAYS(LAST_DAY(ADD_MONTHS(CURRENT_DATE, -1)), 1) AND -- No debe coger las del periodo actual
			ESTADOREG = estadoFiltro; --'NUEVO'
	numTxns := ::ROWCOUNT;
	totalTxns := totalTxns + numTxns;
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Se han insertado '  || To_VARCHAR(numTxns) || ' en CS_STAGESALESTRANSACTION', cReportTable, io_contador);

	-- ------------------------------------------------------------------------------------
	-- INSERT TABLAS STAGE Transacciones Regularizadas anteriores al periodo actual
	-- ------------------------------------------------------------------------------------
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INSERT TABLAS STAGE Transacciones Regularizadas anteriores al periodo actual', cReportTable, io_contador);
	INSERT INTO TCMP.CS_STAGETRANSACTIONASSIGN (TENANTID, BATCHNAME, SETNUMBER, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, POSITIONNAME, 
		GENERICATTRIBUTE1, GENERICATTRIBUTE2, GENERICATTRIBUTE3, 
		GENERICNUMBER1, UNITTYPEFORGENERICNUMBER1, GENERICNUMBER2, UNITTYPEFORGENERICNUMBER2, GENERICNUMBER3, UNITTYPEFORGENERICNUMBER3, 
		GENERICBOOLEAN1)
		
	SELECT 
		TX.TENANTID, 
		reproBatchname AS BATCHNAME,
		TA.SETNUMBER AS SETNUMBER,
		TR.ORDERID, 
		TR.LINENUMBER, 
		CASE WHEN TR.TIPO_REPROCESO like '%-TXN' THEN TR.SUBLINENUMBER 
			ELSE SUBSTRING(TR.SUBLINENUMBER,1,7) || '8' || SUBSTRING(TR.SUBLINENUMBER,9,5) END as NEW_SUBLINENNUMBER, -- char 9: '9' para txn anterior en negativo, '8' para nuevo 
		TR.EVENTTYPEID,
		ifnull(MED.POSITIONNAME,TA.POSITIONNAME) as POSITIONNAME, 
		ifnull(MED.CANAL_DIST_CIC,TA.GENERICATTRIBUTE1) as  GENERICATTRIBUTE1, -- canal dist
		ifnull(MED.COD_MEDIADOR,TA.GENERICATTRIBUTE2) as  GENERICATTRIBUTE2, -- canal dist
		ifnull(MED.SUBCLAVE,TA.GENERICATTRIBUTE3) as  GENERICATTRIBUTE3, -- canal dist
		CASE when TA.GENERICNUMBER1 is null or TA.GENERICNUMBER1 = 0 then 1.00 else TA.GENERICNUMBER1 end as GENERICNUMBER1, -- % intermediacion
		'percent' AS UNITTYPEFORGENERICNUMBER1 ,
		ifnull(MED.ID_DIR_TERRITORIAL,TA.GENERICNUMBER2) as GENERICNUMBER2, --idDirTerritorial
		CASE WHEN ifnull(MED.ID_DIR_TERRITORIAL,TA.GENERICNUMBER2) is null THEN NULL ELSE 'integer' END AS UNITTYPEFORGENERICNUMBER2, 
		CASE WHEN TR.P_NUEVO is null THEN null ELSE TR.P_NUEVO END AS GENERICNUMBER3,
		CASE WHEN TR.P_NUEVO is null THEN null ELSE 'percent' END AS UNITTYPEFORGENERICNUMBER3 ,
		TA.GENERICBOOLEAN1-- Mediador Principal CIC (GB1)
		
	FROM TCMP.CS_SALESTRANSACTION TX
	INNER JOIN "EXT"."TXN_REPROCESOS" TR ON TR.SALESTRANSACTIONSEQ = TX.SALESTRANSACTIONSEQ
	INNER JOIN CS_TRANSACTIONASSIGNMENT TA ON TR.SALESTRANSACTIONSEQ = TA.SALESTRANSACTIONSEQ AND TA.POSITIONNAME = TR.POSITIONNAME
	LEFT JOIN EXT.MODIFICAR_MEDIADOR MED ON MED.POSITIONNAME = TR.NEW_POSITIONNAME
	WHERE (TR.TIPO_REPROCESO like '%-CRED' OR TR.TIPO_REPROCESO like '%-TXN' ) AND 
			TX.COMPENSATIONDATE < ADD_DAYS(LAST_DAY(ADD_MONTHS(CURRENT_DATE, -1)), 1) AND -- No debe coger las del periodo actual
			ESTADOREG = estadoFiltro;

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Se han insertado '  || To_VARCHAR(::ROWCOUNT) || ' en CS_STAGETRANSACTIONASSIGN', cReportTable, io_contador);
	
	INSERT INTO TCMP.CS_STAGESALESTRANSACTION (TENANTID, BATCHNAME, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, PRODUCTID, PRODUCTNAME, VALUE, UNITTYPEFORVALUE, COMPENSATIONDATE, BUSINESSUNITMAP, COMMENTS, GENERICATTRIBUTE1, GENERICATTRIBUTE2, GENERICATTRIBUTE3, GENERICATTRIBUTE4, GENERICATTRIBUTE5, GENERICATTRIBUTE6, GENERICATTRIBUTE7, GENERICATTRIBUTE8, GENERICATTRIBUTE9, GENERICATTRIBUTE10, GENERICATTRIBUTE11, 
	GENERICATTRIBUTE12,GENERICATTRIBUTE13, GENERICATTRIBUTE14, GENERICATTRIBUTE15, GENERICATTRIBUTE16, GENERICATTRIBUTE17, GENERICATTRIBUTE18, GENERICATTRIBUTE19, GENERICATTRIBUTE20, GENERICATTRIBUTE21, GENERICNUMBER1, UNITTYPEFORGENERICNUMBER1, GENERICNUMBER2, UNITTYPEFORGENERICNUMBER2, 
	GENERICNUMBER3, UNITTYPEFORGENERICNUMBER3, GENERICNUMBER4, UNITTYPEFORGENERICNUMBER4,  GENERICNUMBER5, UNITTYPEFORGENERICNUMBER5, GENERICDATE1, GENERICDATE2, GENERICDATE3, GENERICDATE4, GENERICDATE5, GENERICDATE6, GENERICBOOLEAN1, GENERICBOOLEAN2, GENERICBOOLEAN3, 
	GENERICBOOLEAN4, GENERICBOOLEAN6, DATASOURCE)
	
	SELECT 
		TX.TENANTID, 
		reproBatchname AS BATCHNAME,
		TR.ORDERID, 
		TR.LINENUMBER, 
		CASE WHEN TR.TIPO_REPROCESO like '%-TXN' THEN TR.SUBLINENUMBER 
			ELSE SUBSTRING(TR.SUBLINENUMBER,1,7) || '8' || SUBSTRING(TR.SUBLINENUMBER,9,5) END as NEW_SUBLINENNUMBER, -- char 9: '9' para txn anterior en negativo, '8' para nuevo 
		TR.EVENTTYPEID,
		TX.PRODUCTID, 
		TX.PRODUCTNAME, 
		TX.VALUE,
		CASE WHEN TX.VALUE is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORVALUE, 
		TR.NEW_COMPENSATIONDATE AS COMPENSATIONDATE,
		TX.BUSINESSUNITMAP as BUSINESSUNITMAP,
		--buname AS BUSINESSUNITNAME,
		TR.COMENTARIOS as COMMENTS,
		TX.GENERICATTRIBUTE1 AS GENERICATTRIBUTE1,
		TX.GENERICATTRIBUTE2 AS GENERICATTRIBUTE2, 
		TX.GENERICATTRIBUTE3 AS GENERICATTRIBUTE3, 
		TX.GENERICATTRIBUTE4 AS GENERICATTRIBUTE4,
		TX.GENERICATTRIBUTE5 AS GENERICATTRIBUTE5,
		TX.GENERICATTRIBUTE6 AS GENERICATTRIBUTE6, 
		TX.GENERICATTRIBUTE7 AS GENERICATTRIBUTE7, 
		TX.GENERICATTRIBUTE8 AS GENERICATTRIBUTE8, 
		TX.GENERICATTRIBUTE9 AS GENERICATTRIBUTE9, --Tipo Movimiento (GA9)
		TX.GENERICATTRIBUTE10 AS GENERICATTRIBUTE10, 
		TX.GENERICATTRIBUTE11 AS GENERICATTRIBUTE11, 
		TX.GENERICATTRIBUTE12 AS GENERICATTRIBUTE12,
		TR.CASEID_REPROCESO  AS GENERICATTRIBUTE13, -- CaseID (GA13)
		TX.GENERICATTRIBUTE14 AS GENERICATTRIBUTE14,
		TX.GENERICATTRIBUTE15 AS GENERICATTRIBUTE15, 
		TX.GENERICATTRIBUTE16 AS GENERICATTRIBUTE16,
		CASE WHEN TR.TIPO_REPROCESO like '%-TXN' THEN TX.GENERICATTRIBUTE17 
			ELSE TR.NEW_ID_TIPO_RECIBO END AS GENERICATTRIBUTE17, 
		CASE WHEN TR.TIPO_REPROCESO like '%-TXN' THEN TX.GENERICATTRIBUTE18 
			ELSE TX.GENERICATTRIBUTE18 || ' - ' || TR.NEW_DESC_TIPO_RECIBO END AS GENERICATTRIBUTE18, -- se añade AJUSTE MANUAL al tipo actual
		TX.GENERICATTRIBUTE19 AS GENERICATTRIBUTE19, 
		TX.GENERICATTRIBUTE20 AS GENERICATTRIBUTE20, 
		TX.GENERICATTRIBUTE21 AS GENERICATTRIBUTE21, 
		TX.GENERICNUMBER1 AS GENERICNUMBER1, --Importe Precalculado (GN1)
		CASE WHEN TX.GENERICNUMBER1 is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORGENERICNUMBER1, 	
		TX.GENERICNUMBER2 AS GENERICNUMBER2,  --Porcentaje Comision (GN2) -NO SE USA - Se trasalado a TX Asignacion
		CASE WHEN TX.GENERICNUMBER2 is null THEN NULL ELSE 'percent' END AS UNITTYPEFORGENERICNUMBER2, 	
		TX.GENERICNUMBER3 AS GENERICNUMBER3,  --Anualidad (GN3)
		CASE WHEN TX.GENERICNUMBER3 is null THEN NULL ELSE 'integer' END AS UNITTYPEFORGENERICNUMBER3, 
		NULL AS GENERICNUMBER4,  --Prima Minima (GN4) - No se tiene en cuenta en reprocesos
		NULL AS UNITTYPEFORGENERICNUMBER4,
		TX.GENERICNUMBER5 AS GENERICNUMBER5,  --Prima con Impuestos (GN5)
		CASE WHEN TX.GENERICNUMBER5 is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORGENERICNUMBER5, 
		TX.GENERICDATE1 AS GENERICDATE1,
		TX.GENERICDATE2 AS GENERICDATE2,
		TX.GENERICDATE3 AS GENERICDATE3,
		TX.GENERICDATE4 AS GENERICDATE4,
		TX.GENERICDATE5 AS GENERICDATE5,
		TX.GENERICDATE6 AS GENERICDATE6,
		TX.GENERICBOOLEAN1 AS GENERICBOOLEAN1,
		TX.GENERICBOOLEAN2 AS GENERICBOOLEAN2,
		TX.GENERICBOOLEAN3 AS GENERICBOOLEAN3,
		TX.GENERICBOOLEAN4 AS GENERICBOOLEAN4,
		TX.GENERICBOOLEAN6 AS GENERICBOOLEAN6,
		codProceso AS "DATASOURCE"

	FROM TCMP.CS_SALESTRANSACTION TX
	INNER JOIN "EXT"."TXN_REPROCESOS" TR ON TR.SALESTRANSACTIONSEQ = TX.SALESTRANSACTIONSEQ
	INNER JOIN CS_TRANSACTIONASSIGNMENT TA ON TR.SALESTRANSACTIONSEQ = TA.SALESTRANSACTIONSEQ AND TA.POSITIONNAME = TR.POSITIONNAME
--	LEFT JOIN EXT.MODIFICAR_MEDIADOR MED ON MED.POSITIONNAME = TR.NEW_POSITIONNAME
	WHERE (TR.TIPO_REPROCESO like '%-CRED' OR TR.TIPO_REPROCESO like '%-TXN' ) AND 
			TX.COMPENSATIONDATE < ADD_DAYS(LAST_DAY(ADD_MONTHS(CURRENT_DATE, -1)), 1) AND -- No debe coger las del periodo actual
			ESTADOREG = estadoFiltro;
	numTxns := ::ROWCOUNT;
	totalTxns := totalTxns + numTxns;
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Se han insertado '  || To_VARCHAR(numTxns) || ' en CS_STAGESALESTRANSACTION', cReportTable, io_contador);

	-- ------------------------------------------------------------------------------------
	-- INSERT TABLAS STAGE Transacciones Regularizadas del periodo actual
	-- ------------------------------------------------------------------------------------
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INSERT TABLAS STAGE Transacciones Regularizadas del periodo actual', cReportTable, io_contador);
	INSERT INTO TCMP.CS_STAGETRANSACTIONASSIGN (TENANTID, BATCHNAME, SETNUMBER, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, POSITIONNAME, 
		GENERICATTRIBUTE1, GENERICATTRIBUTE2, GENERICATTRIBUTE3, 
		GENERICNUMBER1, UNITTYPEFORGENERICNUMBER1, GENERICNUMBER2, UNITTYPEFORGENERICNUMBER2, GENERICNUMBER3, UNITTYPEFORGENERICNUMBER3, 
		GENERICBOOLEAN1)
		
	SELECT 
		TX.TENANTID, 
		reproBatchname AS BATCHNAME,
		TA.SETNUMBER AS SETNUMBER,
		TR.ORDERID, 
		TR.LINENUMBER, 
		--SUBSTRING(TR.SUBLINENUMBER,1,7) || '8' || SUBSTRING(TR.SUBLINENUMBER,9,5) as NEW_SUBLINENNUMBER, -- char 9: '9' para txn anterior en negativo, '8' para nuevo 
		TR.SUBLINENUMBER as NEW_SUBLINENNUMBER, -- Mismo Sublinennumber
		TR.EVENTTYPEID,
		ifnull(MED.POSITIONNAME,TA.POSITIONNAME) as POSITIONNAME, --Asigna el nuevo 
		ifnull(MED.CANAL_DIST_CIC,TA.GENERICATTRIBUTE1) as  GENERICATTRIBUTE1, -- canal dist
		ifnull(MED.COD_MEDIADOR,TA.GENERICATTRIBUTE2) as  GENERICATTRIBUTE2, -- canal dist
		ifnull(MED.SUBCLAVE,TA.GENERICATTRIBUTE3) as  GENERICATTRIBUTE3, -- canal dist
		CASE when TA.GENERICNUMBER1 is null or TA.GENERICNUMBER1 = 0 then 1.00 else TA.GENERICNUMBER1 end as GENERICNUMBER1, -- % intermediacion
		'percent' AS UNITTYPEFORGENERICNUMBER1 ,
		ifnull(MED.ID_DIR_TERRITORIAL,TA.GENERICNUMBER2) as GENERICNUMBER2, --idDirTerritorial
		CASE WHEN ifnull(MED.ID_DIR_TERRITORIAL,TA.GENERICNUMBER2) is null THEN NULL ELSE 'integer' END AS UNITTYPEFORGENERICNUMBER2, 
		CASE WHEN TR.P_NUEVO is null THEN null ELSE TR.P_NUEVO END AS GENERICNUMBER3,
		CASE WHEN TR.P_NUEVO is null THEN null ELSE 'percent' END AS UNITTYPEFORGENERICNUMBER3 ,
		TA.GENERICBOOLEAN1-- Mediador Principal CIC (GB1)

	FROM TCMP.CS_SALESTRANSACTION TX
	INNER JOIN "EXT"."TXN_REPROCESOS" TR ON TR.SALESTRANSACTIONSEQ = TX.SALESTRANSACTIONSEQ
	INNER JOIN CS_TRANSACTIONASSIGNMENT TA ON TR.SALESTRANSACTIONSEQ = TA.SALESTRANSACTIONSEQ AND TA.POSITIONNAME = TR.POSITIONNAME
	LEFT JOIN EXT.MODIFICAR_MEDIADOR MED ON MED.POSITIONNAME = TR.NEW_POSITIONNAME
	WHERE (TR.TIPO_REPROCESO like '%-CRED' OR TR.TIPO_REPROCESO like '%-TXN' ) AND 
			TX.COMPENSATIONDATE >= ADD_DAYS(LAST_DAY(ADD_MONTHS(CURRENT_DATE, -1)), 1) AND -- Solo coge las del periodo actual
			ESTADOREG = estadoFiltro;

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Se han insertado '  || To_VARCHAR(::ROWCOUNT) || ' en CS_STAGETRANSACTIONASSIGN', cReportTable, io_contador);
	
	INSERT INTO TCMP.CS_STAGESALESTRANSACTION (TENANTID, BATCHNAME, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, PRODUCTID, PRODUCTNAME, VALUE, UNITTYPEFORVALUE, COMPENSATIONDATE, BUSINESSUNITMAP, COMMENTS, GENERICATTRIBUTE1, GENERICATTRIBUTE2, GENERICATTRIBUTE3, GENERICATTRIBUTE4, GENERICATTRIBUTE5, GENERICATTRIBUTE6, GENERICATTRIBUTE7, GENERICATTRIBUTE8, GENERICATTRIBUTE9, GENERICATTRIBUTE10, GENERICATTRIBUTE11, 
	GENERICATTRIBUTE12,GENERICATTRIBUTE13, GENERICATTRIBUTE14, GENERICATTRIBUTE15, GENERICATTRIBUTE16, GENERICATTRIBUTE17, GENERICATTRIBUTE18, GENERICATTRIBUTE19, GENERICATTRIBUTE20, GENERICATTRIBUTE21, GENERICNUMBER1, UNITTYPEFORGENERICNUMBER1, GENERICNUMBER2, UNITTYPEFORGENERICNUMBER2, 
	GENERICNUMBER3, UNITTYPEFORGENERICNUMBER3, GENERICNUMBER4, UNITTYPEFORGENERICNUMBER4,  GENERICNUMBER5, UNITTYPEFORGENERICNUMBER5, GENERICDATE1, GENERICDATE2, GENERICDATE3, GENERICDATE4, GENERICDATE5, GENERICDATE6, GENERICBOOLEAN1, GENERICBOOLEAN2, GENERICBOOLEAN3, 
	GENERICBOOLEAN4, GENERICBOOLEAN6, DATASOURCE)
	
	SELECT 
		TX.TENANTID, 
		reproBatchname AS BATCHNAME,
		TR.ORDERID, 
		TR.LINENUMBER, 
--		SUBSTRING(TR.SUBLINENUMBER,1,7) || '8' || SUBSTRING(TR.SUBLINENUMBER,9,5) as NEW_SUBLINENNUMBER, -- char 9: '9' para txn anterior en negativo, '0' para nuevo 
		TR.SUBLINENUMBER as NEW_SUBLINENNUMBER, -- Mismo Sublinennumber
		TR.EVENTTYPEID,
		TX.PRODUCTID, 
		TX.PRODUCTNAME, 
		TX.VALUE,
		CASE WHEN TX.VALUE is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORVALUE, 
--		TR.NEW_COMPENSATIONDATE AS COMPENSATIONDATE,
		TX.COMPENSATIONDATE AS COMPENSATIONDATE, -- Misma Compensation date
		TX.BUSINESSUNITMAP as BUSINESSUNITMAP,
		--buname AS BUSINESSUNITNAME,
		TR.COMENTARIOS as COMMENTS,  -- Se añaden comentarios
		TX.GENERICATTRIBUTE1 AS GENERICATTRIBUTE1,
		TX.GENERICATTRIBUTE2 AS GENERICATTRIBUTE2, 
		TX.GENERICATTRIBUTE3 AS GENERICATTRIBUTE3, 
		TX.GENERICATTRIBUTE4 AS GENERICATTRIBUTE4,
		TX.GENERICATTRIBUTE5 AS GENERICATTRIBUTE5,
		TX.GENERICATTRIBUTE6 AS GENERICATTRIBUTE6, 
		TX.GENERICATTRIBUTE7 AS GENERICATTRIBUTE7, 
		TX.GENERICATTRIBUTE8 AS GENERICATTRIBUTE8, 
		TX.GENERICATTRIBUTE9 AS GENERICATTRIBUTE9, --Tipo Movimiento (GA9)
		TX.GENERICATTRIBUTE10 AS GENERICATTRIBUTE10, 
		TX.GENERICATTRIBUTE11 AS GENERICATTRIBUTE11, 
		TX.GENERICATTRIBUTE12 AS GENERICATTRIBUTE12,
		TR.CASEID_REPROCESO  AS GENERICATTRIBUTE13, -- CaseID (GA13)
		TX.GENERICATTRIBUTE14 AS GENERICATTRIBUTE14,
		TX.GENERICATTRIBUTE15 AS GENERICATTRIBUTE15, 
		TX.GENERICATTRIBUTE16 AS GENERICATTRIBUTE16,
--		TR.NEW_ID_TIPO_RECIBO AS GENERICATTRIBUTE17, 
		TX.GENERICATTRIBUTE17 AS GENERICATTRIBUTE17, -- se deja el original
		TX.GENERICATTRIBUTE18 AS GENERICATTRIBUTE18, -- se deja el original
		TX.GENERICATTRIBUTE19 AS GENERICATTRIBUTE19, 
		TX.GENERICATTRIBUTE20 AS GENERICATTRIBUTE20, 
		TX.GENERICATTRIBUTE21 AS GENERICATTRIBUTE21, 
		TX.GENERICNUMBER1 AS GENERICNUMBER1, --Importe Precalculado (GN1)
		CASE WHEN TX.GENERICNUMBER1 is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORGENERICNUMBER1, 	
		TX.GENERICNUMBER2 AS GENERICNUMBER2,  --Porcentaje Comision (GN2) -NO SE USA - Se trasalado a TX Asignacion
		CASE WHEN TX.GENERICNUMBER2 is null THEN NULL ELSE 'percent' END AS UNITTYPEFORGENERICNUMBER2, 	
		TX.GENERICNUMBER3 AS GENERICNUMBER3,  --Anualidad (GN3)
		CASE WHEN TX.GENERICNUMBER3 is null THEN NULL ELSE 'integer' END AS UNITTYPEFORGENERICNUMBER3, 
		NULL AS GENERICNUMBER4,  --Prima Minima (GN4) - No se tiene en cuenta en reprocesos
		NULL AS UNITTYPEFORGENERICNUMBER4,
		TX.GENERICNUMBER5 AS GENERICNUMBER5,  --Prima con Impuestos (GN5)
		CASE WHEN TX.GENERICNUMBER5 is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORGENERICNUMBER5, 
		TX.GENERICDATE1 AS GENERICDATE1,
		TX.GENERICDATE2 AS GENERICDATE2,
		TX.GENERICDATE3 AS GENERICDATE3,
		TX.GENERICDATE4 AS GENERICDATE4,
		TX.GENERICDATE5 AS GENERICDATE5,
		TX.GENERICDATE6 AS GENERICDATE6,
		TX.GENERICBOOLEAN1 AS GENERICBOOLEAN1,
		TX.GENERICBOOLEAN2 AS GENERICBOOLEAN2,
		TX.GENERICBOOLEAN3 AS GENERICBOOLEAN3,
		TX.GENERICBOOLEAN4 AS GENERICBOOLEAN4,
		TX.GENERICBOOLEAN6 AS GENERICBOOLEAN6,
		codProceso AS "DATASOURCE"

	FROM TCMP.CS_SALESTRANSACTION TX
	INNER JOIN "EXT"."TXN_REPROCESOS" TR ON TR.SALESTRANSACTIONSEQ = TX.SALESTRANSACTIONSEQ
	INNER JOIN CS_TRANSACTIONASSIGNMENT TA ON TR.SALESTRANSACTIONSEQ = TA.SALESTRANSACTIONSEQ AND TA.POSITIONNAME = TR.POSITIONNAME
--	LEFT JOIN EXT.MODIFICAR_MEDIADOR MED ON MED.POSITIONNAME = TR.NEW_POSITIONNAME
	WHERE (TR.TIPO_REPROCESO like '%-CRED' OR TR.TIPO_REPROCESO like '%-TXN' ) AND 
			TX.COMPENSATIONDATE >= ADD_DAYS(LAST_DAY(ADD_MONTHS(CURRENT_DATE, -1)), 1) AND -- Solo coge las del periodo actual
			ESTADOREG = estadoFiltro;
	numTxns := ::ROWCOUNT;
	totalTxns := totalTxns + numTxns;
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Se han insertado '  || To_VARCHAR(numTxns) || ' en CS_STAGESALESTRANSACTION', cReportTable, io_contador);
	
	
	-- ------------------------------------------------------------------------------------
	-- INSERT TABLAS STAGE Transacciones Regularizadas SIN MEDIADOR
	-- ------------------------------------------------------------------------------------
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INSERT TABLAS STAGE Transacciones Regularizadas SIN MEDIADOR', cReportTable, io_contador);
	INSERT INTO TCMP.CS_STAGETRANSACTIONASSIGN (TENANTID, BATCHNAME, SETNUMBER, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, POSITIONNAME, 
		GENERICATTRIBUTE1, GENERICATTRIBUTE2, GENERICATTRIBUTE3, 
		GENERICNUMBER1, UNITTYPEFORGENERICNUMBER1, GENERICNUMBER2, UNITTYPEFORGENERICNUMBER2, GENERICNUMBER3, UNITTYPEFORGENERICNUMBER3, 
		GENERICBOOLEAN1)
		
	SELECT
		TX.TENANTID, 
		reproBatchname AS BATCHNAME,
		1 AS SETNUMBER,
		TR.ORDERID, 
		TR.LINENUMBER, 
		TR.SUBLINENUMBER as NEW_SUBLINENNUMBER,
		TR.EVENTTYPEID,
		MED.POSITIONNAME as POSITIONNAME, 
		MED.CANAL_DIST_CIC as  GENERICATTRIBUTE1, -- canal dist
		MED.COD_MEDIADOR as  GENERICATTRIBUTE2, -- canal dist
		MED.SUBCLAVE as  GENERICATTRIBUTE3, -- canal dist
		1.00 as GENERICNUMBER1, -- % intermediacion
		'percent' AS UNITTYPEFORGENERICNUMBER1 ,
		MED.ID_DIR_TERRITORIAL as GENERICNUMBER2, --idDirTerritorial
		CASE WHEN MED.ID_DIR_TERRITORIAL is null THEN NULL ELSE 'integer' END AS UNITTYPEFORGENERICNUMBER2, 
		CASE WHEN TR.P_NUEVO is null THEN null ELSE TR.P_NUEVO END AS GENERICNUMBER3,
		CASE WHEN TR.P_NUEVO is null THEN null ELSE 'percent' END AS UNITTYPEFORGENERICNUMBER3 ,
		0 as GENERICBOOLEAN1-- Mediador Principal CIC (GB1) - No se usa
	FROM EXT.EXT_TXN_RECIBOS TX
	INNER JOIN "EXT"."TXN_REPROCESOS" TR ON TR.SALESTRANSACTIONSEQ = TX.STAGESALESTRANSACTIONSEQ
	INNER JOIN EXT.MODIFICAR_MEDIADOR MED ON MED.POSITIONNAME = TR.NEW_POSITIONNAME
	WHERE (TR.TIPO_REPROCESO like '%-SINMED') AND 
			ESTADOREG = estadoFiltro;

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Se han insertado '  || To_VARCHAR(::ROWCOUNT) || ' en CS_STAGETRANSACTIONASSIGN', cReportTable, io_contador);
	
	INSERT INTO TCMP.CS_STAGESALESTRANSACTION (TENANTID, BATCHNAME, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, PRODUCTID, PRODUCTNAME, VALUE, UNITTYPEFORVALUE, COMPENSATIONDATE, BUSINESSUNITNAME, COMMENTS, GENERICATTRIBUTE1, GENERICATTRIBUTE2, GENERICATTRIBUTE3, GENERICATTRIBUTE4, GENERICATTRIBUTE5, GENERICATTRIBUTE6, GENERICATTRIBUTE7, GENERICATTRIBUTE8, GENERICATTRIBUTE9, GENERICATTRIBUTE10, GENERICATTRIBUTE11, 
	GENERICATTRIBUTE12,GENERICATTRIBUTE13, GENERICATTRIBUTE14, GENERICATTRIBUTE15, GENERICATTRIBUTE16, GENERICATTRIBUTE17, GENERICATTRIBUTE18, GENERICATTRIBUTE19, GENERICATTRIBUTE20, GENERICATTRIBUTE21, GENERICNUMBER1, UNITTYPEFORGENERICNUMBER1, GENERICNUMBER2, UNITTYPEFORGENERICNUMBER2, 
	GENERICNUMBER3, UNITTYPEFORGENERICNUMBER3, GENERICNUMBER4, UNITTYPEFORGENERICNUMBER4,  GENERICNUMBER5, UNITTYPEFORGENERICNUMBER5, GENERICDATE1, GENERICDATE2, GENERICDATE3, GENERICDATE4, GENERICDATE5, GENERICDATE6, GENERICBOOLEAN1, GENERICBOOLEAN2, GENERICBOOLEAN3, 
	GENERICBOOLEAN4, GENERICBOOLEAN6, DATASOURCE)
	
	SELECT 
		TX.TENANTID, 
		reproBatchname AS BATCHNAME,
		TR.ORDERID, 
		TR.LINENUMBER, 
		TR.SUBLINENUMBER as NEW_SUBLINENNUMBER,
		TR.EVENTTYPEID,
		TX.PRODUCTID, 
		TX.PRODUCTNAME, 
		TX.VALUE,
		CASE WHEN TX.VALUE is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORVALUE, 
		TR.NEW_COMPENSATIONDATE AS COMPENSATIONDATE,
		TX.BUSINESSUNITNAME as BUSINESSUNITNAME,
		TR.COMENTARIOS as COMMENTS,
		TX.GENERICATTRIBUTE1 AS GENERICATTRIBUTE1,
		TX.GENERICATTRIBUTE2 AS GENERICATTRIBUTE2, 
		TX.GENERICATTRIBUTE3 AS GENERICATTRIBUTE3, 
		TX.GENERICATTRIBUTE4 AS GENERICATTRIBUTE4,
		TX.GENERICATTRIBUTE5 AS GENERICATTRIBUTE5,
		TX.GENERICATTRIBUTE6 AS GENERICATTRIBUTE6, 
		TX.GENERICATTRIBUTE7 AS GENERICATTRIBUTE7, 
		TX.GENERICATTRIBUTE8 AS GENERICATTRIBUTE8, 
		TX.GENERICATTRIBUTE9 AS GENERICATTRIBUTE9, --Tipo Movimiento (GA9)
		TX.GENERICATTRIBUTE10 AS GENERICATTRIBUTE10, 
		TX.GENERICATTRIBUTE11 AS GENERICATTRIBUTE11, 
		TX.GENERICATTRIBUTE12 AS GENERICATTRIBUTE12,
		TR.CASEID_REPROCESO  AS GENERICATTRIBUTE13, -- CaseID (GA13)
		TX.GENERICATTRIBUTE14 AS GENERICATTRIBUTE14,
		TX.GENERICATTRIBUTE15 AS GENERICATTRIBUTE15, 
		TX.GENERICATTRIBUTE16 AS GENERICATTRIBUTE16,
		TX.GENERICATTRIBUTE17 AS GENERICATTRIBUTE17, 
		TX.GENERICATTRIBUTE18 AS GENERICATTRIBUTE18, -- se añade AJUSTE MANUAL al tipo actual
		TX.GENERICATTRIBUTE19 AS GENERICATTRIBUTE19, 
		TX.GENERICATTRIBUTE20 AS GENERICATTRIBUTE20, 
		TX.GENERICATTRIBUTE21 AS GENERICATTRIBUTE21, 
		TX.GENERICNUMBER1 AS GENERICNUMBER1, --Importe Precalculado (GN1)
		CASE WHEN TX.GENERICNUMBER1 is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORGENERICNUMBER1, 	
		TX.GENERICNUMBER2 AS GENERICNUMBER2,  --Porcentaje Comision (GN2) -NO SE USA - Se trasalado a TX Asignacion
		CASE WHEN TX.GENERICNUMBER2 is null THEN NULL ELSE 'percent' END AS UNITTYPEFORGENERICNUMBER2, 	
		TX.GENERICNUMBER3 AS GENERICNUMBER3,  --Anualidad (GN3)
		CASE WHEN TX.GENERICNUMBER3 is null THEN NULL ELSE 'integer' END AS UNITTYPEFORGENERICNUMBER3, 
		TX.GENERICNUMBER4 AS GENERICNUMBER4,  --Prima Minima (GN4) - No se tiene en cuenta en reprocesos
		CASE WHEN TX.GENERICNUMBER4 is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORGENERICNUMBER4, 	
		TX.GENERICNUMBER5 AS GENERICNUMBER5,  --Prima con Impuestos (GN5)
		CASE WHEN TX.GENERICNUMBER5 is null THEN NULL ELSE TR.MONEDA_SAP END AS UNITTYPEFORGENERICNUMBER5, 
		TX.GENERICDATE1 AS GENERICDATE1,
		TX.GENERICDATE2 AS GENERICDATE2,
		TX.GENERICDATE3 AS GENERICDATE3,
		TX.GENERICDATE4 AS GENERICDATE4,
		TX.GENERICDATE5 AS GENERICDATE5,
		TX.GENERICDATE6 AS GENERICDATE6,
		TX.GENERICBOOLEAN1 AS GENERICBOOLEAN1,
		TX.GENERICBOOLEAN2 AS GENERICBOOLEAN2,
		TX.GENERICBOOLEAN3 AS GENERICBOOLEAN3,
		TX.GENERICBOOLEAN4 AS GENERICBOOLEAN4,
		TX.GENERICBOOLEAN6 AS GENERICBOOLEAN6,
		codProceso AS "DATASOURCE"

	FROM EXT.EXT_TXN_RECIBOS TX
	INNER JOIN "EXT"."TXN_REPROCESOS" TR ON TR.SALESTRANSACTIONSEQ = TX.STAGESALESTRANSACTIONSEQ
	INNER JOIN EXT.MODIFICAR_MEDIADOR MED ON MED.POSITIONNAME = TR.NEW_POSITIONNAME
	WHERE (TR.TIPO_REPROCESO like '%-SINMED') AND 
			ESTADOREG = estadoFiltro;
			
	numTxns := ::ROWCOUNT;
	totalTxns := totalTxns + numTxns;
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Se han insertado '  || To_VARCHAR(numTxns) || ' en CS_STAGESALESTRANSACTION', cReportTable, io_contador);	
	-- Se actualiza el ESTADO de EXT_TXN_RECIBOS TX de 'SIN MEDIADOR' -> 'PENDIENTE'
	IF numTxns > 0 THEN
		UPDATE EXT.EXT_TXN_RECIBOS TX 
		SET ESTADO = 'ENVIADA'
		WHERE TX.STAGESALESTRANSACTIONSEQ IN ( SELECT SALESTRANSACTIONSEQ FROM "EXT"."TXN_REPROCESOS" TR 
																			WHERE (TR.TIPO_REPROCESO like '%-SINMED') AND 
																					ESTADOREG = estadoFiltro ) ;
		CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Actualizado el estado de '  || To_VARCHAR(::ROWCOUNT) || ' regs en EXT.EXT_TXN_RECIBOS ', cReportTable, io_contador);	
	END IF;
	-- ------------------------------------------------------------------------------------
	-- REPROCESAR MVREC de Registros SIN CARTERA
	-- ------------------------------------------------------------------------------------	
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'REPROCESAR MVREC de Registros SIN CARTERA', cReportTable, io_contador);

	SELECT
		STRING_AGG(TX.ID, ',') ,
		length( STRING_AGG(TX.ID, ',') ), 
		count(TX.ID)
		INTO IDs_Concatenados, longitud_cadenaIDs, Num_RegistrosIDs DEFAULT '',0,0
	FROM EXT.EXT_MOVIMIENTO_RECIBOS_HIST TX
	INNER JOIN "EXT"."TXN_REPROCESOS" TR ON TR.SALESTRANSACTIONSEQ = TX.ID
	WHERE (TR.TIPO_REPROCESO like '%-NOCAR') AND 
			TR.ESTADOREG = estadoFiltro;

	IF Num_RegistrosIDs > 0 THEN
		CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Se ha lanzado el reprocesado de '  || To_VARCHAR(:Num_RegistrosIDs) || ' Registros NO CARTERA', cReportTable, io_contador);
		-- Se llama al procedimiento que reprocesa los movimientos de recibos
		CALL "EXT"."SP_REPROCESO_MOVIMIENTO_RECIBOS"( IDs_Concatenados );

	END IF;
	
	-- ------------------------------------------------------------------------------------
	-- Se actualiza el estado de los registros de "EXT"."TXN_REPROCESOS" a ENVIADO
	-- ------------------------------------------------------------------------------------

	UPDATE "EXT"."TXN_REPROCESOS"
	SET BATCHNAME = reproBatchname, ESTADOREG = 'ENVIADO', MODIF_DATE = CURRENT_TIMESTAMP
	WHERE ESTADOREG = estadoFiltro;

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'ACTUALIZADAS CUOTAS ESTADO A ENVIADO ' || To_VARCHAR(::ROWCOUNT) || ' registros' , cReportTable, io_contador);

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Numero de transacciones totales generadas: '  || To_VARCHAR(totalTxns) , cReportTable, io_contador);
			
	IF totalTxns > 0 THEN
	
		CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INSERT TABLA VIRTUAL ' , cReportTable, io_contador);
		-- PRD: VT_PIPELINERUNS TST: VT_PipelineRuns
		INSERT INTO "EXT"."VT_PIPELINERUNS" ("Command","StageType","TraceLevel","SkipAnalyzeSchema","SqlLogging","DebugContext","UserId","RunMode","BatchName","Module","ProcessingUnit","CalendarName","StartDateScheduled")

		SELECT
		'Import' as "Command",
		'ValidateAndTransfer' as "StageType",
		'status' as "TraceLevel",
		null as "SkipAnalyzeSchema",
		null as "SqlLogging",
		null as "DebugContext",
		'data_integration_service_account' as "UserId",
		'all' as "RunMode",
		reproBatchname as "BatchName",
		'TransactionalData' as "Module",
		NULL as "ProcessingUnit",
		'Main Monthly Calendar' as "CalendarName",
		add_seconds(current_utctimestamp,2) as "StartDateScheduled" FROM Dummy;


	ELSE
	
	END IF;
		CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, cReportTable || 'FIN PROCEDIMIENTO', cReportTable, io_contador);
-- Fin procedimiento
END