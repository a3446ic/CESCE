CREATE PROCEDURE "EXT"."SP_CARGA_OTROS_CONCEPTOS" LANGUAGE SQLSCRIPT SQL SECURITY DEFINER DEFAULT SCHEMA "EXT" AS

BEGIN

	DECLARE i_Tenant VARCHAR(4);
	DECLARE vProcedure VARCHAR(127) := 'SP_CARGA_OTROS_CONCEPTOS';
	DECLARE io_contador Number := 0;
	DECLARE batchname VARCHAR(50);
	DECLARE txn_insertadas VARCHAR(10);
	DECLARE cVersion CONSTANT VARCHAR(2) := '01';
-- VERSIONES
--v01 - Se modifica EVENTTYPEID de Subenciones minimo_garantizado que estaban erroneas
 
----------------------------- HANDLER EXCEPTION -------------------------

DECLARE EXIT HANDLER FOR SQLEXCEPTION

	BEGIN
		CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'SQL_ERROR_MESSAGE: ' || 
                      IFNULL(::SQL_ERROR_MESSAGE,'') || 
                      '. SQL_ERROR_CODE: '||::SQL_ERROR_CODE, vProcedure , io_contador);
	END;
	
	SELECT TENANTID INTO i_Tenant FROM CS_TENANT;
	

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INICIO PROCEDIMIENTO with SESSION_USER '|| SESSION_USER || ' version ' || cVersion, vProcedure, io_contador);
	
	-- Se genera batchname ficticio para la Validaci√≥n y transferencia a Commissions: OC_20230530_180400.txt
	SELECT 'OC_'|| TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDD_HH24MISS') || '.txt' INTO batchname FROM DUMMY;
	
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Batchname: ' || batchname , vProcedure, io_contador);

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'DELETE TABLAS STAGE PARA TRANSACCIONES YA INSERTADAS ', vProcedure, io_contador);
/*	
	DELETE FROM TCMP.CS_STAGESALESTRANSACTION
	WHERE ORDERID in (SELECT A.ORDERID FROM TCMP.CS_STAGESALESTRANSACTION A, EXT.OTROS_CONCEPTOS_CUOTAS B
		WHERE A.ORDERID = B.ID
		AND A.LINENUMBER = CONCAT((SUBSTRING (B.FECHA_PAGO, 0, 4)), (SUBSTRING (B.FECHA_PAGO, 6, 2)))
		AND A.SUBLINENUMBER = 0
		AND A.TENANTID = i_Tenant
		)
	AND LINENUMBER in (SELECT A.LINENUMBER FROM TCMP.CS_STAGESALESTRANSACTION A, EXT.OTROS_CONCEPTOS_CUOTAS B
		WHERE A.ORDERID = B.ID
		AND A.LINENUMBER = CONCAT((SUBSTRING (B.FECHA_PAGO, 0, 4)), (SUBSTRING (B.FECHA_PAGO, 6, 2)))
		AND A.SUBLINENUMBER = 0
		AND A.TENANTID = i_Tenant
		)
	AND SUBLINENUMBER in (SELECT A.SUBLINENUMBER FROM TCMP.CS_STAGESALESTRANSACTION A, EXT.OTROS_CONCEPTOS_CUOTAS B
		WHERE A.ORDERID = B.ID
		AND A.LINENUMBER = CONCAT((SUBSTRING (B.FECHA_PAGO, 0, 4)), (SUBSTRING (B.FECHA_PAGO, 6, 2)))
		AND A.SUBLINENUMBER = 0
		AND A.TENANTID = i_Tenant
	);
	
	DELETE FROM TCMP.CS_STAGETRANSACTIONASSIGN
	WHERE ORDERID in (SELECT A.ORDERID FROM TCMP.CS_STAGETRANSACTIONASSIGN A, EXT.OTROS_CONCEPTOS_CUOTAS B
		WHERE A.ORDERID = B.ID
		AND A.LINENUMBER = CONCAT((SUBSTRING (B.FECHA_PAGO, 0, 4)), (SUBSTRING (B.FECHA_PAGO, 6, 2)))
		AND A.SUBLINENUMBER = 0
		AND A.TENANTID = i_Tenant
		)
	AND LINENUMBER in (SELECT A.LINENUMBER FROM TCMP.CS_STAGETRANSACTIONASSIGN A, EXT.OTROS_CONCEPTOS_CUOTAS B
		WHERE A.ORDERID = B.ID
		AND A.LINENUMBER = CONCAT((SUBSTRING (B.FECHA_PAGO, 0, 4)), (SUBSTRING (B.FECHA_PAGO, 6, 2)))
		AND A.SUBLINENUMBER = 0
		AND A.TENANTID = i_Tenant
		)
	AND SUBLINENUMBER in (SELECT A.SUBLINENUMBER FROM TCMP.CS_STAGETRANSACTIONASSIGN A, EXT.OTROS_CONCEPTOS_CUOTAS B
		WHERE A.ORDERID = B.ID
		AND A.LINENUMBER = CONCAT((SUBSTRING (B.FECHA_PAGO, 0, 4)), (SUBSTRING (B.FECHA_PAGO, 6, 2)))
		AND A.SUBLINENUMBER = 0
		AND A.TENANTID = i_Tenant
	);
*/
-- Se borran las transacciones no enviadas a liquidar por si se han vuelto a regenerar 
	DELETE FROM TCMP.CS_STAGESALESTRANSACTION
	WHERE STAGESALESTRANSACTIONSEQ in  (
			SELECT A.STAGESALESTRANSACTIONSEQ 
			FROM TCMP.CS_STAGESALESTRANSACTION A, EXT.OTROS_CONCEPTOS_CUOTAS occ
			WHERE A.ORDERID = occ.ID
				AND A.LINENUMBER = CONCAT((SUBSTRING (occ.FECHA_PAGO, 0, 4)), (SUBSTRING (occ.FECHA_PAGO, 6, 2)))
				AND A.SUBLINENUMBER = 0
				AND (occ.ESTADO = 'PTE_PAGO' OR (occ.ESTADO = 'PENDIENTE' AND (occ.TIPO_CONCEPTO = 'PRESTAMO' OR occ.TIPO_CONCEPTO = 'EMBARGO')))
					AND (CASE WHEN (occ.TIPO_CONCEPTO = 'PRESTAMO' AND occ.CANTIDAD < 0) OR occ.TIPO_CONCEPTO = 'EMBARGO' 
					THEN occ.FECHA_PAGO ELSE occ.FECHA_PAGO_REAL END) <= CURRENT_DATE
			);
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Borrados ' || To_VARCHAR(::ROWCOUNT) || ' registros de CS_STAGESALESTRANSACTION' , vProcedure, io_contador);

-- Se borran las asignaciones de las transacciones no enviadas a liquidar por si se han vuelto a regenerar 
	DELETE FROM TCMP.CS_STAGETRANSACTIONASSIGN
	WHERE STAGESALESTRANSACTIONSEQ in 
	(SELECT A.STAGESALESTRANSACTIONSEQ FROM TCMP.CS_STAGETRANSACTIONASSIGN A, EXT.OTROS_CONCEPTOS_CUOTAS occ
		WHERE A.ORDERID = occ.ID
		AND A.LINENUMBER = CONCAT((SUBSTRING (occ.FECHA_PAGO, 0, 4)), (SUBSTRING (occ.FECHA_PAGO, 6, 2)))
		AND A.SUBLINENUMBER = 0
		AND (occ.ESTADO = 'PTE_PAGO' OR (occ.ESTADO = 'PENDIENTE' AND (occ.TIPO_CONCEPTO = 'PRESTAMO' OR occ.TIPO_CONCEPTO = 'EMBARGO')))
			AND (CASE WHEN (occ.TIPO_CONCEPTO = 'PRESTAMO' AND occ.CANTIDAD < 0) OR occ.TIPO_CONCEPTO = 'EMBARGO' 
			THEN occ.FECHA_PAGO ELSE occ.FECHA_PAGO_REAL END) <= CURRENT_DATE
	);
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'Borrados ' || To_VARCHAR(::ROWCOUNT) || ' registros de CS_STAGETRANSACTIONASSIGN' , vProcedure, io_contador);
	
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INSERT TABLAS STAGE ', vProcedure, io_contador);

	INSERT INTO TCMP.CS_STAGESALESTRANSACTION (TENANTID, BATCHNAME, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, PRODUCTDESCRIPTION, 
	VALUE, UNITTYPEFORVALUE, COMPENSATIONDATE, BUSINESSUNITNAME, GENERICATTRIBUTE13, GENERICNUMBER1, UNITTYPEFORGENERICNUMBER1, GENERICDATE1,
	GENERICATTRIBUTE1, GENERICATTRIBUTE2, COMMENTS, GENERICDATE2, GENERICDATE3) 

	SELECT i_Tenant, batchname, occ.ID, CONCAT((SUBSTRING (occ.FECHA_PAGO, 0, 4)), (SUBSTRING (occ.FECHA_PAGO, 6, 2))), 0,
	CASE WHEN (occ.TIPO_CONCEPTO = 'SUBVENCION' AND oc.TIPO_PAGO = 'fijo') THEN 'SUBF'
--	WHEN (occ.TIPO_CONCEPTO = 'SUBVENCION' AND oc.TIPO_PAGO = 'minimo_garantizado') THEN 'SUBM'
	WHEN (occ.TIPO_CONCEPTO = 'SUBVENCION' AND oc.TIPO_PAGO = 'minimo_garantizado') THEN 'SUBC'
	WHEN (occ.TIPO_CONCEPTO = 'PRESTAMO' AND occ.CANTIDAD > 0) THEN 'PRESP'
	WHEN (occ.TIPO_CONCEPTO = 'PRESTAMO' AND occ.CANTIDAD < 0) THEN 'PRESC'
	WHEN (occ.TIPO_CONCEPTO = 'EMBARGO') THEN 'EMB'
	WHEN (occ.TIPO_CONCEPTO = 'GASTO_DE_AGENCIA') THEN 'GA'
	WHEN (occ.TIPO_CONCEPTO = 'MEDIOS_VINCULADOS_A_MEDIADORES') THEN 'MED'
	WHEN (occ.TIPO_CONCEPTO = 'GESTION_DE_BENEFICIOS_SOCIALES') THEN 'BS'
	ELSE NULL
	END,
	occ.CONCEPTO, 0, 'EUR',
	CASE WHEN ( FECHA_PAGO_REAL is null or FECHA_PAGO_REAL='') THEN CURRENT_DATE ELSE FECHA_PAGO_REAL END FECHA_PAGO_REAL,  -- COMPESATIONDATE
	oc.UNIDAD_NEGOCIO, CASEID, occ.CANTIDAD, 
	'EUR', To_DATE(occ.FECHA_PAGO,'YYYY/MM/DD'), --occ.FECHA_PAGO
	occ.TIPO_CONCEPTO, --GA1
	oc.CONCEPTO, --GA2
	oc.COMENTARIOS, --Comments
	CASE WHEN (occ.TIPO_CONCEPTO = 'MEDIOS_VINCULADOS_A_MEDIADORES' or occ.TIPO_CONCEPTO = 'GESTION_DE_BENEFICIOS_SOCIALES') THEN FECHA_INICIO_MEDIO ELSE FECHA_INICIO END AS GD2,
	CASE WHEN (occ.TIPO_CONCEPTO = 'MEDIOS_VINCULADOS_A_MEDIADORES' or occ.TIPO_CONCEPTO = 'GESTION_DE_BENEFICIOS_SOCIALES') THEN FECHA_FIN_MEDIO ELSE FECHA_FIN END AS GD3
	FROM EXT.OTROS_CONCEPTOS_CUOTAS occ
	INNER JOIN EXT.OTROS_CONCEPTOS oc 
	ON oc.ID = occ.ID
	WHERE (occ.ESTADO = 'PTE_PAGO' OR (occ.ESTADO = 'PENDIENTE' AND (occ.TIPO_CONCEPTO = 'PRESTAMO' OR occ.TIPO_CONCEPTO = 'EMBARGO')))
	AND (CASE WHEN (occ.TIPO_CONCEPTO = 'PRESTAMO' AND occ.CANTIDAD < 0) OR occ.TIPO_CONCEPTO = 'EMBARGO' THEN occ.FECHA_PAGO ELSE occ.FECHA_PAGO_REAL END) <= CURRENT_DATE;

	INSERT INTO TCMP.CS_STAGETRANSACTIONASSIGN (TENANTID, BATCHNAME, ORDERID, LINENUMBER, SUBLINENUMBER, EVENTTYPEID, POSITIONNAME, GENERICATTRIBUTE2, GENERICATTRIBUTE3)

	SELECT i_Tenant, batchname, occ.ID, CONCAT((SUBSTRING (occ.FECHA_PAGO, 0, 4)), (SUBSTRING (occ.FECHA_PAGO, 6, 2))), 0,
	CASE WHEN (occ.TIPO_CONCEPTO = 'SUBVENCION' AND oc.TIPO_PAGO = 'fijo') THEN 'SUBF'
	WHEN (occ.TIPO_CONCEPTO = 'SUBVENCION' AND oc.TIPO_PAGO = 'minimo_garantizado') THEN 'SUBC'
	WHEN (occ.TIPO_CONCEPTO = 'PRESTAMO' AND occ.CANTIDAD > 0) THEN 'PRESP'
	WHEN (occ.TIPO_CONCEPTO = 'PRESTAMO' AND occ.CANTIDAD < 0) THEN 'PRESC'
	WHEN (occ.TIPO_CONCEPTO = 'EMBARGO') THEN 'EMB'
	WHEN (occ.TIPO_CONCEPTO = 'GASTO_DE_AGENCIA') THEN 'GA'
	WHEN (occ.TIPO_CONCEPTO = 'MEDIOS_VINCULADOS_A_MEDIADORES') THEN 'MED'
	ELSE NULL
	END,
	oc.COD_MEDIADOR, SUBSTRING (oc.COD_MEDIADOR, 0, 4), SUBSTRING (oc.COD_MEDIADOR, 6, 4)
	FROM EXT.OTROS_CONCEPTOS_CUOTAS occ
	INNER JOIN EXT.OTROS_CONCEPTOS oc 
	ON oc.ID = occ.ID
	WHERE (occ.ESTADO = 'PTE_PAGO' OR (occ.ESTADO = 'PENDIENTE' AND (occ.TIPO_CONCEPTO = 'PRESTAMO' OR occ.TIPO_CONCEPTO = 'EMBARGO')))
	AND (CASE WHEN (occ.TIPO_CONCEPTO = 'PRESTAMO' AND occ.CANTIDAD < 0) OR occ.TIPO_CONCEPTO = 'EMBARGO' THEN occ.FECHA_PAGO ELSE occ.FECHA_PAGO_REAL END) <= CURRENT_DATE;
	
	SELECT COUNT(*) INTO txn_insertadas FROM TCMP.CS_STAGESALESTRANSACTION WHERE BATCHNAME = batchname;
	
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, ' SE HAN INSERTADO ' || txn_insertadas || ' EN STAGE', vProcedure, io_contador);

	-- ------------------------------------------------------------------------------------
	-- Se actualiza el estado de las CUOTAS Insertadas como transacciones a PTE_LIQ
	-- ------------------------------------------------------------------------------------
	UPDATE EXT.OTROS_CONCEPTOS_CUOTAS occ 
	SET ESTADO = 'PTE_LIQ',
		MODIF_DATE = CURRENT_TIMESTAMP
	FROM EXT.OTROS_CONCEPTOS_CUOTAS occ
	INNER JOIN EXT.OTROS_CONCEPTOS oc ON oc.ID = occ.ID
	WHERE (occ.ESTADO = 'PTE_PAGO' OR (occ.ESTADO = 'PENDIENTE' AND (occ.TIPO_CONCEPTO = 'PRESTAMO' OR occ.TIPO_CONCEPTO = 'EMBARGO')))
			AND (CASE WHEN (occ.TIPO_CONCEPTO = 'PRESTAMO' AND occ.CANTIDAD < 0) OR occ.TIPO_CONCEPTO = 'EMBARGO' THEN occ.FECHA_PAGO ELSE occ.FECHA_PAGO_REAL END) <= CURRENT_DATE;

	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'ACTUALIZADAS CUOTAS ESTADO A PTE_LIQ ' || To_VARCHAR(::ROWCOUNT) || ' registros' , vProcedure, io_contador);
	
	
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, 'INSERT TABLA VIRTUAL ' , vProcedure, io_contador);

	INSERT INTO "EXT"."VT_PipelineRuns" ("Command","StageType","TraceLevel","SkipAnalyzeSchema","SqlLogging","DebugContext","UserId","RunMode","BatchName","Module","ProcessingUnit","CalendarName","StartDateScheduled")
	SELECT
	'Import' as "Command",
	'ValidateAndTransfer' as "StageType",
	'status' as "TraceLevel",
	null as "SkipAnalyzeSchema",
	null as "SqlLogging",
	null as "DebugContext",
	'data_integration_service_account' as "UserId",
	'all' as "RunMode",
	batchname as "BatchName",
	'TransactionalData' as "Module",
	NULL as "ProcessingUnit",
	'Main Monthly Calendar' as "CalendarName",
	add_seconds(current_utctimestamp,2) as "StartDateScheduled" FROM Dummy;
	
	CALL EXT.LIB_GLOBAL_CESCE:w_debug (i_Tenant, vProcedure || 'FIN PROCEDIMIENTO with SESSION_USER ' || SESSION_USER, vProcedure, io_contador);

END